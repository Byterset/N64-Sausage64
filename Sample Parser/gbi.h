#ifndef _SAUSN64_GBI_H
#define _SAUSN64_GBI_H

    #include <stdint.h>

    typedef enum {
        DPFillRectangle = 0,
        DPScisFillRectangle,
        DPFullSync,
        DPLoadSync,
        DPTileSync,
        DPPipeSync,
        DPLoadTLUT_pal16,
        DPLoadTLUT_pal256,
        DPLoadTextureBlock,
        DPLoadTextureBlock_4b,
        DPLoadTextureTile,
        DPLoadTextureTile_4b,
        DPLoadBlock,
        DPNoOp,
        DPNoOpTag,
        DPPipelineMode,
        DPSetBlendColor,
        DPSetEnvColor,
        DPSetFillColor,
        DPSetFogColor,
        DPSetPrimColor,
        DPSetColorImage,
        DPSetDepthImage,
        DPSetTextureImage,
        DPSetHilite1Tile,
        DPSetHilite2Tile,
        DPSetAlphaCompare,
        DPSetAlphaDither,
        DPSetColorDither,
        DPSetCombineMode,
        DPSetCombineLERP,
        DPSetConvert,
        DPSetTextureConvert,
        DPSetCycleType,
        DPSetDepthSource,
        DPSetCombineKey,
        DPSetKeyGB,
        DPSetKeyR,
        DPSetPrimDepth,
        DPSetRenderMode,
        DPSetScissor,
        DPSetTextureDetail,
        DPSetTextureFilter,
        DPSetTextureLOD,
        DPSetTextureLUT,
        DPSetTexturePersp,
        DPSetTile,
        DPSetTileSize,
        SP1Triangle,
        SP2Triangles,
        SPBranchLessZ,
        SPBranchLessZrg,
        SPBranchList,
        SPClipRatio,
        SPCullDisplayList,
        SPDisplayList,
        SPEndDisplayList,
        SPFogPosition,
        SPForceMatrix,
        SPSetGeometryMode,
        SPClearGeometryMode,
        SPInsertMatrix,
        SPLine3D,
        SPLineW3D,
        SPLoadUcode,
        SPLoadUcodeL,
        SPLookAt,
        SPMatrix,
        SPModifyVertex,
        SPPerspNormalize,
        SPPopMatrix,
        SPSegment,
        SPSetLights0,
        SPSetLights1,
        SPSetLights2,
        SPSetLights3,
        SPSetLights4,
        SPSetLights5,
        SPSetLights6,
        SPSetLights7,
        SPSetStatus,
        SPNumLights,
        SPLight,
        SPLightColor,
        SPTexture,
        SPTextureRectangle,
        SPScisTextureRectangle,
        SPTextureRectangleFlip,
        SPVertex,
        SPViewport,
        SPBgRectCopy,
        SPBgRect1Cyc,
        SPObjRectangle,
        SPObjRectangleR,
        SPObjSprite,
        SPObjMatrix,
        SPObjSubMatrix,
        SPObjRenderMode,
        SPObjLoadTxtr,
        SPObjLoadTxRect,
        SPObjLoadTxRectR,
        SPObjLoadTxSprite,
        SPSelectDL,
        SPSelectBranchDL
    } DListCName;

    typedef enum {
        enum_G_MTX_MODELVIEW = 0,
        enum_G_MTX_PROJECTION,
        enum_G_MTX_MUL,
        enum_G_MTX_LOAD,
        enum_G_MTX_NOPUSH,
        enum_G_MTX_PUSH,
        enum_G_ZBUFFER,
        enum_G_SHADE,
        enum_G_TEXTURE_ENABLE,
        enum_G_SHADING_SMOOTH,
        enum_G_CULL_FRONT,
        enum_G_CULL_BACK,
        enum_G_CULL_BOTH,
        enum_G_FOG,
        enum_G_LIGHTING,
        enum_G_TEXTURE_GEN,
        enum_G_TEXTURE_GEN_LINEAR,
        enum_G_LOD,
        enum_G_CLIPPING,
        enum_G_TX_LOADTILE,
        enum_G_TX_RENDERTILE,
        enum_G_TX_NOMIRROR,
        enum_G_TX_WRAP,
        enum_G_TX_MIRROR,
        enum_G_TX_CLAMP,
        enum_G_TX_NOMASK,
        enum_G_TX_NOLOD,
        enum_G_IM_FMT_RGBA,
        enum_G_IM_FMT_YUV,
        enum_G_IM_FMT_CI,
        enum_G_IM_FMT_IA,
        enum_G_IM_FMT_I,
        enum_G_IM_SIZ_4b,
        enum_G_IM_SIZ_8b,
        enum_G_IM_SIZ_16b,
        enum_G_IM_SIZ_32b,
        enum_G_PM_1PRIMITIVE,
        enum_G_PM_NPRIMITIVE,
        enum_G_CYC_1CYCLE,
        enum_G_CYC_2CYCLE,
        enum_G_CYC_COPY,
        enum_G_CYC_FILL,
        enum_G_TP_NONE,
        enum_G_TP_PERSP,
        enum_G_TD_CLAMP,
        enum_G_TD_SHARPEN,
        enum_G_TD_DETAIL,
        enum_G_TL_TILE,
        enum_G_TL_LOD,
        enum_G_TT_NONE,
        enum_G_TT_RGBA16,
        enum_G_TT_IA16,
        enum_G_TF_POINT,
        enum_G_TF_AVERAGE,
        enum_G_TF_BILERP,
        enum_G_TC_CONV,
        enum_G_TC_FILTCONV,
        enum_G_TC_FILT,
        enum_G_CK_NONE,
        enum_G_CK_KEY,
        enum_G_CD_MAGICSQ,
        enum_G_CD_BAYER,
        enum_G_CD_NOISE,
        enum_G_CD_ENABLE,
        enum_G_CD_DISABLE,
        enum_G_AD_PATTERN,
        enum_G_AD_NOTPATTERN,
        enum_G_AD_NOISE,
        enum_G_AD_DISABLE,
        enum_G_AC_NONE,
        enum_G_AC_THRESHOLD,
        enum_G_AC_DITHER,
        enum_G_ZS_PIXEL,
        enum_G_ZS_PRIM ,
        enum_G_CV_K0,
        enum_G_CV_K1,
        enum_G_CV_K2,
        enum_G_CV_K3,
        enum_G_CV_K4,
        enum_G_CV_K5,
        enum_G_SC_NON_INTERLACE ,
        enum_G_SC_ODD_INTERLACE ,
        enum_G_SC_EVEN_INTERLACE,
        enum_G_CC_PRIMITIVE,
        enum_G_CC_SHADE,
        enum_G_CC_MODULATEI,
        enum_G_CC_MODULATEIA,
        enum_G_CC_MODULATEIDECALA,
        enum_G_CC_MODULATERGB,
        enum_G_CC_MODULATERGBA,
        enum_G_CC_MODULATERGBDECALA,
        enum_G_CC_MODULATEI_PRIM,
        enum_G_CC_MODULATEIA_PRIM,
        enum_G_CC_MODULATEIDECALA_PRIM,
        enum_G_CC_MODULATERGB_PRIM,
        enum_G_CC_MODULATERGBA_PRIM,
        enum_G_CC_MODULATERGBDECALA_PRIM,
        enum_G_CC_DECALRGB,
        enum_G_CC_DECALRGBA,
        enum_G_CC_BLENDI,
        enum_G_CC_BLENDIA,
        enum_G_CC_BLENDIDECALA,
        enum_G_CC_BLENDRGBA,
        enum_G_CC_BLENDRGBDECALA,
        enum_G_CC_ADDRGB,
        enum_G_CC_ADDRGBDECALA,
        enum_G_CC_REFLECTRGB,
        enum_G_CC_REFLECTRGBDECALA,
        enum_G_CC_HILITERGB,
        enum_G_CC_HILITERGBA,
        enum_G_CC_HILITERGBDECALA,
        enum_G_CC_SHADEDECALA,
        enum_G_CC_BLENDPE,
        enum_G_CC_BLENDPEDECALA,
        enum__G_CC_BLENDPE,
        enum__G_CC_BLENDPEDECALA,
        enum__G_CC_TWOCOLORTEX,
        enum__G_CC_SPARSEST,
        enum_G_CC_TEMPLERP,
        enum_G_CC_TRILERP,
        enum_G_CC_INTERFERENCE,
        enum_G_CC_1CYUV2RGB,
        enum_G_CC_YUV2RGB,
        enum_G_CC_PASS2,
        enum_G_CC_MODULATEI2,
        enum_G_CC_MODULATEIA2,
        enum_G_CC_MODULATERGB2,
        enum_G_CC_MODULATERGBA2,
        enum_G_CC_MODULATEI_PRIM2,
        enum_G_CC_MODULATEIA_PRIM2,
        enum_G_CC_MODULATERGB_PRIM2,
        enum_G_CC_MODULATERGBA_PRIM2,
        enum_G_CC_DECALRGB2,
        enum_G_CC_BLENDI2,
        enum_G_CC_BLENDIA2,
        enum_G_CC_CHROMA_KEY2,
        enum_G_CC_HILITERGB2,
        enum_G_CC_HILITERGBA2,
        enum_G_CC_HILITERGBDECALA2,
        enum_G_CC_HILITERGBPASSA2,
        enum_G_CC_PRIMLITE,
        enum_G_CCMUX_COMBINED,
        enum_G_CCMUX_TEXEL0,
        enum_G_CCMUX_TEXEL1,
        enum_G_CCMUX_PRIMITIVE,
        enum_G_CCMUX_SHADE,
        enum_G_CCMUX_ENVIRONMENT,
        enum_G_CCMUX_CENTER,
        enum_G_CCMUX_SCALE,
        enum_G_CCMUX_COMBINED_ALPHA,
        enum_G_CCMUX_TEXEL0_ALPHA,
        enum_G_CCMUX_TEXEL1_ALPHA,
        enum_G_CCMUX_PRIMITIVE_ALPHA,
        enum_G_CCMUX_SHADE_ALPHA,
        enum_G_CCMUX_ENV_ALPHA,
        enum_G_CCMUX_LOD_FRACTION,
        enum_G_CCMUX_PRIM_LOD_FRAC,
        enum_G_CCMUX_NOISE,
        enum_G_CCMUX_K4,
        enum_G_CCMUX_K5,
        enum_G_CCMUX_1,
        enum_G_CCMUX_0,
        enum_G_ACMUX_COMBINED,
        enum_G_ACMUX_TEXEL0,
        enum_G_ACMUX_TEXEL1,
        enum_G_ACMUX_PRIMITIVE,
        enum_G_ACMUX_SHADE,
        enum_G_ACMUX_ENVIRONMENT,
        enum_G_ACMUX_LOD_FRACTION,
        enum_G_ACMUX_PRIM_LOD_FRAC,
        enum_G_ACMUX_1,
        enum_G_ACMUX_0,
        enum_G_RM_AA_ZB_OPA_SURF,
        enum_G_RM_AA_ZB_OPA_SURF2,
        enum_G_RM_AA_ZB_XLU_SURF,
        enum_G_RM_AA_ZB_XLU_SURF2,
        enum_G_RM_AA_ZB_OPA_DECAL,
        enum_G_RM_AA_ZB_OPA_DECAL2,
        enum_G_RM_AA_ZB_XLU_DECAL,
        enum_G_RM_AA_ZB_XLU_DECAL2,
        enum_G_RM_AA_ZB_OPA_INTER,
        enum_G_RM_AA_ZB_OPA_INTER2,
        enum_G_RM_AA_ZB_XLU_INTER,
        enum_G_RM_AA_ZB_XLU_INTER2,
        enum_G_RM_AA_ZB_XLU_LINE,
        enum_G_RM_AA_ZB_XLU_LINE2,
        enum_G_RM_AA_ZB_DEC_LINE,
        enum_G_RM_AA_ZB_DEC_LINE2,
        enum_G_RM_AA_ZB_TEX_EDGE,
        enum_G_RM_AA_ZB_TEX_EDGE2,
        enum_G_RM_AA_ZB_TEX_INTER,
        enum_G_RM_AA_ZB_TEX_INTER2,
        enum_G_RM_AA_ZB_SUB_SURF,
        enum_G_RM_AA_ZB_SUB_SURF2,
        enum_G_RM_AA_ZB_PCL_SURF,
        enum_G_RM_AA_ZB_PCL_SURF2,
        enum_G_RM_AA_ZB_OPA_TERR,
        enum_G_RM_AA_ZB_OPA_TERR2,
        enum_G_RM_AA_ZB_TEX_TERR,
        enum_G_RM_AA_ZB_TEX_TERR2,
        enum_G_RM_AA_ZB_SUB_TERR,
        enum_G_RM_AA_ZB_SUB_TERR2,
        enum_G_RM_RA_ZB_OPA_SURF,
        enum_G_RM_RA_ZB_OPA_SURF2,
        enum_G_RM_RA_ZB_OPA_DECAL,
        enum_G_RM_RA_ZB_OPA_DECAL2,
        enum_G_RM_RA_ZB_OPA_INTER,
        enum_G_RM_RA_ZB_OPA_INTER2,
        enum_G_RM_AA_OPA_SURF,
        enum_G_RM_AA_OPA_SURF2,
        enum_G_RM_AA_XLU_SURF,
        enum_G_RM_AA_XLU_SURF2,
        enum_G_RM_AA_XLU_LINE,
        enum_G_RM_AA_XLU_LINE2,
        enum_G_RM_AA_DEC_LINE,
        enum_G_RM_AA_DEC_LINE2,
        enum_G_RM_AA_TEX_EDGE,
        enum_G_RM_AA_TEX_EDGE2,
        enum_G_RM_AA_SUB_SURF,
        enum_G_RM_AA_SUB_SURF2,
        enum_G_RM_AA_PCL_SURF,
        enum_G_RM_AA_PCL_SURF2,
        enum_G_RM_AA_OPA_TERR,
        enum_G_RM_AA_OPA_TERR2,
        enum_G_RM_AA_TEX_TERR,
        enum_G_RM_AA_TEX_TERR2,
        enum_G_RM_AA_SUB_TERR,
        enum_G_RM_AA_SUB_TERR2,
        enum_G_RM_RA_OPA_SURF,
        enum_G_RM_RA_OPA_SURF2,
        enum_G_RM_ZB_OPA_SURF,
        enum_G_RM_ZB_OPA_SURF2,
        enum_G_RM_ZB_XLU_SURF,
        enum_G_RM_ZB_XLU_SURF2,
        enum_G_RM_ZB_OPA_DECAL,
        enum_G_RM_ZB_OPA_DECAL2,
        enum_G_RM_ZB_XLU_DECAL,
        enum_G_RM_ZB_XLU_DECAL2,
        enum_G_RM_ZB_CLD_SURF,
        enum_G_RM_ZB_CLD_SURF2,
        enum_G_RM_ZB_OVL_SURF,
        enum_G_RM_ZB_OVL_SURF2,
        enum_G_RM_ZB_PCL_SURF,
        enum_G_RM_ZB_PCL_SURF2,
        enum_G_RM_OPA_SURF,
        enum_G_RM_OPA_SURF2,
        enum_G_RM_XLU_SURF,
        enum_G_RM_XLU_SURF2,
        enum_G_RM_CLD_SURF,
        enum_G_RM_CLD_SURF2,
        enum_G_RM_TEX_EDGE,
        enum_G_RM_TEX_EDGE2,
        enum_G_RM_PCL_SURF,
        enum_G_RM_PCL_SURF2,
        enum_G_RM_ADD,
        enum_G_RM_ADD2,
        enum_G_RM_NOOP,
        enum_G_RM_NOOP2,
        enum_G_RM_VISCVG,
        enum_G_RM_VISCVG2,
        enum_G_RM_OPA_CI,
        enum_G_RM_OPA_CI2,
        enum_G_RM_FOG_SHADE_A,
        enum_G_RM_FOG_PRIM_A,
        enum_G_RM_PASS,
    } GBIConstants;

    typedef struct {
        DListCName id; // The command name as an enum
        char* name;    // The command name as a string
        int argcount;  // The number or arguments the command takes in
        int size;      // The numer of Gfx slots the command occupies
    } DListCommand;

    typedef struct {
        GBIConstants constant;
        char* str;
        int32_t value;
    } GBIMacros;

    typedef struct {
        char* str;
        uint8_t values[8];
    } CombineMode;

    extern const DListCommand commands_f3dex2[];
    extern const GBIMacros    macros_f3dex2[];
    extern const CombineMode  ccmodes_f3dex2[];

    extern uint8_t* gbi_resolveccmode(char* ccmode);
    extern int32_t gbi_resolvemacro(char* macro);

#endif