/***************************************************************
                         catherineMdl.h
                               
Model data generated from the .s64 file, using a custom parsing 
tool.
***************************************************************/


/*********************************
              Macros
*********************************/

// Total meshes
#define TOTALMESHES 19

// Mesh macros
#define MESH_RightLeg     0
#define MESH_LeftArm      1
#define MESH_Chest        2
#define MESH_Head         3
#define MESH_Ponytail     4
#define MESH_LeftFoot     5
#define MESH_Bang         6
#define MESH_LeftHand     7
#define MESH_LeftFemur    8
#define MESH_LeftForearm  9
#define MESH_Pelvis       10
#define MESH_RightForearm 11
#define MESH_RightHand    12
#define MESH_RightFoot    13
#define MESH_RightArm     14
#define MESH_Sword        15
#define MESH_Pad          16
#define MESH_RightFemur   17
#define MESH_LeftLeg      18

// Custom combine mode to allow mixing primitive and vertex colors
#define G_CC_PRIMLITE SHADE,0,PRIMITIVE,0,0,0,0,PRIMITIVE


/*********************************
             Structs
*********************************/

typedef struct {
    Gfx* dl;
    Mtx mtx_root;
    Mtx mtx_iroot;
    Mtx mtx_translation;
    Mtx mtx_rotation;
    Mtx mtx_scale;
} Mesh;

typedef struct {
    float pos[3];
} MeshRoot;


/*********************************
             Vertices
*********************************/

static Vtx vtx_RightLeg[] = {
    {-19, -2, 43, 0, 3 << 6, 14 << 6, -80, -81, -56, 255}, /* 0 */
    {-18, -7, 76, 0, 3 << 6, 14 << 6, -79, -91, 40, 255}, /* 1 */
    {-21, 5, 76, 0, 3 << 6, 14 << 6, -119, 21, 40, 255}, /* 2 */
    {-20, 7, 43, 0, 3 << 6, 14 << 6, -113, 32, -49, 255}, /* 3 */
    {-8, 10, 43, 0, 3 << 6, 14 << 6, 72, 84, -62, 255}, /* 4 */
    {-15, 4, 38, 0, 3 << 6, 14 << 6, -13, 2, -126, 255}, /* 5 */
    {-15, 10, 43, 0, 3 << 6, 14 << 6, -39, 105, -59, 255}, /* 6 */
    {-12, -2, 43, 0, 3 << 6, 14 << 6, 33, -104, -65, 255}, /* 7 */
    {-7, 1, 43, 0, 3 << 6, 14 << 6, 105, -30, -65, 255}, /* 8 */
    {-12, 4, 87, 0, 3 << 6, 14 << 6, 3, -1, 127, 255}, /* 9 */
    {-15, 16, 76, 0, 3 << 6, 14 << 6, -46, 112, 39, 255}, /* 10 */
    {-7, 14, 76, 0, 3 << 6, 14 << 6, 74, 97, 36, 255}, /* 11 */
    {-1, 2, 75, 0, 3 << 6, 14 << 6, 121, -21, 31, 255}, /* 12 */
    {-10, -8, 76, 0, 3 << 6, 14 << 6, 38, -116, 34, 255}, /* 13 */
};

static Vtx vtx_LeftArm[] = {
    {25, 13, 132, 0, 0 << 6, 32 << 6, -72, 64, -83, 255}, /* 0 */
    {25, 15, 143, 0, 0 << 6, 32 << 6, -66, 102, 37, 255}, /* 1 */
    {48, 20, 139, 0, 0 << 6, 32 << 6, 89, 91, 7, 255}, /* 2 */
    {45, 13, 125, 0, 0 << 6, 32 << 6, 71, 47, -94, 255}, /* 3 */
    {20, 7, 139, 0, 0 << 6, 32 << 6, -127, -1, 1, 255}, /* 4 */
    {25, -2, 142, 0, 0 << 6, 32 << 6, -64, -104, 36, 255}, /* 5 */
    {26, 6, 149, 0, 0 << 6, 32 << 6, -62, 1, 111, 255}, /* 6 */
    {25, 2, 131, 0, 0 << 6, 32 << 6, -69, -66, -84, 255}, /* 7 */
    {51, 10, 151, 0, 0 << 6, 32 << 6, 98, 8, 81, 255}, /* 8 */
    {49, -4, 146, 0, 0 << 6, 32 << 6, 89, -88, 23, 255}, /* 9 */
    {41, 7, 139, 0, 0 << 6, 32 << 6, 125, 1, -22, 255}, /* 10 */
    {46, -2, 129, 0, 0 << 6, 32 << 6, 77, -64, -78, 255}, /* 11 */
};

static Vtx vtx_Chest[] = {
    {18, 6, 100, 0, 5 << 6, 64 << 6, 107, 0, -69, 255}, /* 0 */
    {0, 5, 92, 0, 3 << 6, 3 << 6, 0, -3, -127, 255}, /* 1 */
    {13, 19, 100, 0, 18 << 6, 64 << 6, 61, 90, -66, 255}, /* 2 */
    {0, 20, 100, 0, 31 << 6, 64 << 6, 0, 110, -63, 255}, /* 3 */
    {16, 20, 127, 0, 16 << 6, 32 << 6, 72, 103, -17, 255}, /* 4 */
    {21, 8, 120, 0, 4 << 6, 40 << 6, 125, -1, -20, 255}, /* 5 */
    {0, 20, 126, 0, 32 << 6, 32 << 6, 0, 127, -9, 255}, /* 6 */
    {23, 4, 128, 0, 0 << 6, 29 << 6, 126, -8, -13, 255}, /* 7 */
    {0, 22, 138, 0, 32 << 6, 19 << 6, 0, 121, 39, 255}, /* 8 */
    {19, 20, 140, 0, 15 << 6, 19 << 6, 70, 100, 36, 255}, /* 9 */
    {24, 8, 142, 0, 4 << 6, 13 << 6, 116, 0, 52, 255}, /* 10 */
    {0, 9, 151, 0, 28 << 6, 0 << 6, 0, 22, 125, 255}, /* 11 */
    {11, 8, 151, 0, 18 << 6, 1 << 6, 26, 19, 123, 255}, /* 12 */
    {-18, 6, 100, 0, 5 << 6, 64 << 6, -107, 0, -69, 255}, /* 13 */
    {-13, 19, 100, 0, 18 << 6, 64 << 6, -61, 90, -66, 255}, /* 14 */
    {-21, 8, 120, 0, 4 << 6, 40 << 6, -125, -1, -20, 255}, /* 15 */
    {-16, 20, 127, 0, 16 << 6, 32 << 6, -72, 103, -17, 255}, /* 16 */
    {-23, 4, 128, 0, 0 << 6, 29 << 6, -126, -8, -13, 255}, /* 17 */
    {-19, 20, 140, 0, 15 << 6, 19 << 6, -70, 100, 36, 255}, /* 18 */
    {-24, 8, 142, 0, 4 << 6, 13 << 6, -116, 0, 52, 255}, /* 19 */
    {-11, 8, 151, 0, 18 << 6, 1 << 6, -26, 19, 123, 255}, /* 20 */
    {0, -10, 100, 0, 3 << 6, 64 << 6, 0, -110, -63, 255}, /* 21 */
    {0, 5, 92, 0, 30 << 6, 4 << 6, 0, -3, -127, 255}, /* 22 */
    {14, -4, 101, 0, 20 << 6, 62 << 6, 78, -78, -63, 255}, /* 23 */
    {18, 6, 100, 0, 32 << 6, 63 << 6, 107, 0, -69, 255}, /* 24 */
    {23, 4, 128, 0, 28 << 6, 29 << 6, 126, -8, -13, 255}, /* 25 */
    {24, 8, 142, 0, 28 << 6, 13 << 6, 116, 0, 52, 255}, /* 26 */
    {14, -5, 145, 0, 14 << 6, 16 << 6, 58, -75, 85, 255}, /* 27 */
    {13, -16, 131, 0, 10 << 6, 33 << 6, 59, -113, 2, 255}, /* 28 */
    {21, 8, 120, 0, 30 << 6, 40 << 6, 125, -1, -20, 255}, /* 29 */
    {15, -6, 118, 0, 18 << 6, 44 << 6, 85, -89, -31, 255}, /* 30 */
    {0, -10, 118, 0, 4 << 6, 46 << 6, 0, -121, -39, 255}, /* 31 */
    {0, -16, 131, 0, 0 << 6, 34 << 6, 0, -127, 5, 255}, /* 32 */
    {11, 8, 151, 0, 14 << 6, 3 << 6, 26, 19, 123, 255}, /* 33 */
    {0, -8, 143, 0, 0 << 6, 16 << 6, 0, -86, 93, 255}, /* 34 */
    {0, 9, 151, 0, 5 << 6, 0 << 6, 0, 22, 125, 255}, /* 35 */
    {-14, -4, 101, 0, 20 << 6, 62 << 6, -78, -78, -63, 255}, /* 36 */
    {-18, 6, 100, 0, 32 << 6, 63 << 6, -107, 0, -69, 255}, /* 37 */
    {-23, 4, 128, 0, 28 << 6, 29 << 6, -126, -8, -13, 255}, /* 38 */
    {-13, -16, 131, 0, 10 << 6, 33 << 6, -59, -113, 2, 255}, /* 39 */
    {-14, -5, 145, 0, 14 << 6, 16 << 6, -58, -75, 85, 255}, /* 40 */
    {-24, 8, 142, 0, 28 << 6, 13 << 6, -116, 0, 52, 255}, /* 41 */
    {-15, -6, 118, 0, 18 << 6, 44 << 6, -85, -89, -31, 255}, /* 42 */
    {-21, 8, 120, 0, 30 << 6, 40 << 6, -125, -1, -20, 255}, /* 43 */
    {-11, 8, 151, 0, 14 << 6, 3 << 6, -26, 19, 123, 255}, /* 44 */
    {-19, 21, 146, 0, 0 << 6, 32 << 6, -105, -68, 24, 255}, /* 45 */
    {-19, 24, 146, 0, 0 << 6, 32 << 6, -97, 78, 23, 255}, /* 46 */
    {12, 23, 97, 0, 0 << 6, 32 << 6, -65, 87, -65, 255}, /* 47 */
    {12, 21, 97, 0, 0 << 6, 32 << 6, -72, -81, -65, 255}, /* 48 */
    {-11, 24, 150, 0, 0 << 6, 32 << 6, 28, 73, 100, 255}, /* 49 */
    {19, 23, 102, 0, 0 << 6, 32 << 6, 93, 80, 33, 255}, /* 50 */
    {-11, 22, 150, 0, 0 << 6, 32 << 6, 18, -73, 102, 255}, /* 51 */
    {19, 21, 102, 0, 0 << 6, 32 << 6, 84, -89, 34, 255}, /* 52 */
    {21, 23, 91, 0, 0 << 6, 32 << 6, 62, 65, -90, 255}, /* 53 */
    {21, 20, 91, 0, 0 << 6, 32 << 6, 50, -74, -91, 255}, /* 54 */
};

static Vtx vtx_Head[] = {
    {3, -17, 164, 0, 6 << 6, 36 << 6, 70, -104, -21, 255}, /* 0 */
    {0, -18, 173, 0, 0 << 6, 18 << 6, 0, -126, -15, 255}, /* 1 */
    {0, -21, 163, 0, 0 << 6, 36 << 6, 0, -111, -62, 255}, /* 2 */
    {0, -17, 151, 0, 0 << 6, 64 << 6, 0, -93, -86, 255}, /* 3 */
    {0, -17, 162, 0, 0 << 6, 40 << 6, 0, -117, -50, 255}, /* 4 */
    {18, -9, 179, 0, 29 << 6, 8 << 6, 110, -63, 5, 255}, /* 5 */
    {18, -6, 162, 0, 28 << 6, 43 << 6, 106, -64, -28, 255}, /* 6 */
    {11, -18, 181, 0, 16 << 6, 1 << 6, 76, -102, -2, 255}, /* 7 */
    {0, -21, 181, 0, 0 << 6, 0 << 6, 0, -127, -3, 255}, /* 8 */
    {13, -10, 155, 0, 20 << 6, 56 << 6, 84, -75, -59, 255}, /* 9 */
    {-3, -17, 164, 0, 6 << 6, 36 << 6, -70, -104, -21, 255}, /* 10 */
    {-18, -9, 179, 0, 29 << 6, 8 << 6, -110, -63, 5, 255}, /* 11 */
    {-18, -6, 162, 0, 28 << 6, 43 << 6, -106, -64, -28, 255}, /* 12 */
    {-11, -18, 181, 0, 16 << 6, 1 << 6, -76, -102, -2, 255}, /* 13 */
    {-13, -10, 155, 0, 20 << 6, 56 << 6, -84, -75, -59, 255}, /* 14 */
    {18, -9, 179, 0, 23 << 6, 1 << 6, 111, -62, 5, 255}, /* 15 */
    {18, 5, 192, 0, 23 << 6, 1 << 6, 101, 2, 77, 255}, /* 16 */
    {11, -18, 181, 0, 23 << 6, 1 << 6, 76, -102, -2, 255}, /* 17 */
    {21, 4, 174, 0, 23 << 6, 1 << 6, 127, 7, -4, 255}, /* 18 */
    {16, 18, 161, 0, 23 << 6, 1 << 6, 88, 78, -48, 255}, /* 19 */
    {15, 17, 191, 0, 23 << 6, 1 << 6, 79, 75, 66, 255}, /* 20 */
    {0, 15, 198, 0, 23 << 6, 1 << 6, 0, 64, 110, 255}, /* 21 */
    {0, 28, 178, 0, 23 << 6, 1 << 6, 0, 126, 12, 255}, /* 22 */
    {0, 3, 200, 0, 23 << 6, 1 << 6, 0, 5, 127, 255}, /* 23 */
    {0, -12, 198, 0, 23 << 6, 1 << 6, 0, -61, 111, 255}, /* 24 */
    {8, -18, 190, 0, 23 << 6, 1 << 6, 52, -99, 61, 255}, /* 25 */
    {0, 17, 153, 0, 23 << 6, 1 << 6, 0, 94, -85, 255}, /* 26 */
    {0, -21, 181, 0, 23 << 6, 1 << 6, 0, -127, -3, 255}, /* 27 */
    {-18, -9, 179, 0, 23 << 6, 1 << 6, -111, -62, 5, 255}, /* 28 */
    {-11, -18, 181, 0, 23 << 6, 1 << 6, -76, -102, -2, 255}, /* 29 */
    {-18, 5, 192, 0, 23 << 6, 1 << 6, -101, 2, 77, 255}, /* 30 */
    {-21, 4, 174, 0, 23 << 6, 1 << 6, -127, 7, -4, 255}, /* 31 */
    {-15, 17, 191, 0, 23 << 6, 1 << 6, -79, 75, 66, 255}, /* 32 */
    {-16, 18, 161, 0, 23 << 6, 1 << 6, -88, 78, -48, 255}, /* 33 */
    {-8, -18, 190, 0, 23 << 6, 1 << 6, -52, -99, 61, 255}, /* 34 */
    {-6, -20, 184, 0, 0 << 6, 32 << 6, 14, 94, -84, 255}, /* 35 */
    {-3, -20, 183, 0, 0 << 6, 32 << 6, 118, -14, -45, 255}, /* 36 */
    {-12, -23, 172, 0, 0 << 6, 32 << 6, -26, -28, -121, 255}, /* 37 */
    {-6, -10, 188, 0, 0 << 6, 32 << 6, 32, 115, 42, 255}, /* 38 */
    {-9, -23, 188, 0, 0 << 6, 32 << 6, -16, -82, 96, 255}, /* 39 */
    {-14, -17, 182, 0, 0 << 6, 32 << 6, -107, 63, -28, 255}, /* 40 */
    {15, -12, 180, 0, 0 << 6, 32 << 6, -101, 56, -52, 255}, /* 41 */
    {19, -8, 179, 0, 0 << 6, 32 << 6, 54, 106, -44, 255}, /* 42 */
    {17, -16, 171, 0, 0 << 6, 32 << 6, 7, -35, -122, 255}, /* 43 */
    {14, -7, 186, 0, 0 << 6, 32 << 6, -42, 83, 86, 255}, /* 44 */
    {20, -14, 183, 0, 0 << 6, 32 << 6, 89, -61, 66, 255}, /* 45 */
    {13, -16, 180, 0, 0 << 6, 32 << 6, -95, -82, 16, 255}, /* 46 */
    {-17, -11, 182, 0, 0 << 6, 32 << 6, 90, 47, -76, 255}, /* 47 */
    {-13, -14, 182, 0, 0 << 6, 32 << 6, 104, -73, 5, 255}, /* 48 */
    {-20, -14, 169, 0, 0 << 6, 32 << 6, -16, -29, -123, 255}, /* 49 */
    {-11, -7, 187, 0, 0 << 6, 32 << 6, 78, 70, 72, 255}, /* 50 */
    {-20, -13, 183, 0, 0 << 6, 32 << 6, -89, -52, 74, 255}, /* 51 */
    {-20, -8, 178, 0, 0 << 6, 32 << 6, -42, 115, -36, 255}, /* 52 */
    {-21, -4, 178, 0, 0 << 6, 32 << 6, 118, 29, -38, 255}, /* 53 */
    {-19, -7, 180, 0, 0 << 6, 32 << 6, 77, -99, 20, 255}, /* 54 */
    {-21, -5, 158, 0, 0 << 6, 32 << 6, 84, -95, -7, 255}, /* 55 */
    {-20, -4, 148, 0, 0 << 6, 32 << 6, 18, -3, -126, 255}, /* 56 */
    {-17, -2, 183, 0, 0 << 6, 32 << 6, 83, 35, 89, 255}, /* 57 */
    {-23, -4, 179, 0, 0 << 6, 32 << 6, -108, -34, 57, 255}, /* 58 */
    {-21, 2, 177, 0, 0 << 6, 32 << 6, 11, 126, 16, 255}, /* 59 */
    {-21, 0, 155, 0, 0 << 6, 32 << 6, 22, 121, -31, 255}, /* 60 */
    {-23, -4, 155, 0, 0 << 6, 32 << 6, -114, -50, -24, 255}, /* 61 */
    {21, -4, 178, 0, 0 << 6, 32 << 6, -122, -5, -36, 255}, /* 62 */
    {21, -7, 148, 0, 0 << 6, 32 << 6, -25, -37, -119, 255}, /* 63 */
    {20, -8, 156, 0, 0 << 6, 32 << 6, -65, -109, -2, 255}, /* 64 */
    {20, -9, 179, 0, 0 << 6, 32 << 6, -38, -107, 58, 255}, /* 65 */
    {17, -1, 183, 0, 0 << 6, 32 << 6, -68, 45, 98, 255}, /* 66 */
    {23, -4, 177, 0, 0 << 6, 32 << 6, 120, 0, 41, 255}, /* 67 */
    {22, -6, 153, 0, 0 << 6, 32 << 6, 123, -21, -22, 255}, /* 68 */
    {20, -3, 156, 0, 0 << 6, 32 << 6, -37, 118, -28, 255}, /* 69 */
    {21, 0, 175, 0, 0 << 6, 32 << 6, -25, 124, 0, 255}, /* 70 */
    {22, 7, 168, 0, 22 << 6, 30 << 6, 103, 57, -47, 255}, /* 71 */
    {21, 4, 174, 0, 22 << 6, 30 << 6, 126, 9, 16, 255}, /* 72 */
    {20, 1, 171, 0, 22 << 6, 30 << 6, 114, -47, -30, 255}, /* 73 */
    {18, 6, 164, 0, 22 << 6, 30 << 6, 83, 20, -94, 255}, /* 74 */
    {19, 7, 170, 0, 22 << 6, 30 << 6, 53, 114, 19, 255}, /* 75 */
    {16, 18, 161, 0, 22 << 6, 30 << 6, 88, 78, -48, 255}, /* 76 */
    {21, 4, 174, 0, 22 << 6, 30 << 6, 127, 7, -4, 255}, /* 77 */
    {15, 7, 153, 0, 22 << 6, 30 << 6, 86, 19, -92, 255}, /* 78 */
    {18, -6, 162, 0, 22 << 6, 30 << 6, 106, -64, -28, 255}, /* 79 */
    {18, -9, 179, 0, 22 << 6, 30 << 6, 111, -62, 5, 255}, /* 80 */
    {0, -17, 151, 0, 22 << 6, 30 << 6, 0, -93, -86, 255}, /* 81 */
    {0, 4, 147, 0, 22 << 6, 30 << 6, 0, 9, -127, 255}, /* 82 */
    {0, 17, 153, 0, 22 << 6, 30 << 6, 0, 94, -85, 255}, /* 83 */
    {13, -10, 155, 0, 22 << 6, 30 << 6, 84, -75, -59, 255}, /* 84 */
    {-16, 18, 161, 0, 22 << 6, 30 << 6, -88, 78, -48, 255}, /* 85 */
    {-15, 7, 153, 0, 22 << 6, 30 << 6, -86, 19, -92, 255}, /* 86 */
    {-21, 4, 174, 0, 22 << 6, 30 << 6, -127, 7, -4, 255}, /* 87 */
    {-18, -6, 162, 0, 22 << 6, 30 << 6, -106, -64, -28, 255}, /* 88 */
    {-18, -9, 179, 0, 22 << 6, 30 << 6, -111, -62, 5, 255}, /* 89 */
    {-13, -10, 155, 0, 22 << 6, 30 << 6, -84, -75, -59, 255}, /* 90 */
    {-22, 7, 168, 0, 22 << 6, 30 << 6, -103, 57, -47, 255}, /* 91 */
    {-20, 1, 171, 0, 22 << 6, 30 << 6, -114, -47, -30, 255}, /* 92 */
    {-21, 4, 174, 0, 22 << 6, 30 << 6, -126, 9, 16, 255}, /* 93 */
    {-18, 6, 164, 0, 22 << 6, 30 << 6, -83, 20, -94, 255}, /* 94 */
    {-19, 7, 170, 0, 22 << 6, 30 << 6, -53, 114, 19, 255}, /* 95 */
};

static Vtx vtx_Ponytail[] = {
    {-1, 29, 205, 0, 0 << 6, 32 << 6, -43, -81, 88, 255}, /* 0 */
    {15, 28, 194, 0, 0 << 6, 32 << 6, 115, -53, -1, 255}, /* 1 */
    {8, 56, 219, 0, 0 << 6, 32 << 6, 21, 83, 94, 255}, /* 2 */
    {0, 19, 178, 0, 0 << 6, 32 << 6, 40, -116, -32, 255}, /* 3 */
    {5, 47, 187, 0, 0 << 6, 32 << 6, 56, 95, -63, 255}, /* 4 */
    {-8, 36, 195, 0, 0 << 6, 32 << 6, -124, 2, 29, 255}, /* 5 */
    {-12, 36, 196, 0, 0 << 6, 32 << 6, -53, -48, 105, 255}, /* 6 */
    {8, 47, 192, 0, 0 << 6, 32 << 6, 107, 15, 66, 255}, /* 7 */
    {-14, 76, 196, 0, 0 << 6, 32 << 6, -37, 115, 38, 255}, /* 8 */
    {5, 16, 182, 0, 0 << 6, 32 << 6, 47, -117, -17, 255}, /* 9 */
    {4, 52, 177, 0, 0 << 6, 32 << 6, 65, 51, -96, 255}, /* 10 */
    {-19, 36, 177, 0, 0 << 6, 32 << 6, -102, -33, -68, 255}, /* 11 */
    {2, 46, 199, 0, 0 << 6, 32 << 6, -40, -8, 120, 255}, /* 12 */
    {17, 28, 185, 0, 0 << 6, 32 << 6, 101, -77, 8, 255}, /* 13 */
    {17, 77, 192, 0, 0 << 6, 32 << 6, 45, 116, 22, 255}, /* 14 */
    {-2, 19, 183, 0, 0 << 6, 32 << 6, -58, -112, -15, 255}, /* 15 */
    {10, 42, 174, 0, 0 << 6, 32 << 6, 28, 3, -124, 255}, /* 16 */
    {-2, 59, 184, 0, 0 << 6, 32 << 6, -103, 62, -42, 255}, /* 17 */
};

static Vtx vtx_LeftFoot[] = {
    {24, 11, 1, 0, 35 << 6, 1 << 6, 87, 63, -68, 255}, /* 0 */
    {26, -13, 1, 0, 32 << 6, 24 << 6, 114, -38, -41, 255}, /* 1 */
    {3, -13, 1, 0, 64 << 6, 24 << 6, -118, -18, -43, 255}, /* 2 */
    {5, 11, 1, 0, 61 << 6, 1 << 6, -86, 63, -69, 255}, /* 3 */
    {20, -23, 1, 0, 41 << 6, 32 << 6, 76, -95, -36, 255}, /* 4 */
    {9, -23, 1, 0, 56 << 6, 32 << 6, -76, -95, -37, 255}, /* 5 */
    {9, -23, 1, 0, -3 << 6, 64 << 6, -74, -98, -33, 255}, /* 6 */
    {20, -23, 1, 0, 8 << 6, 64 << 6, 74, -98, -32, 255}, /* 7 */
    {18, -18, 11, 0, 3 << 6, 34 << 6, 46, -80, 87, 255}, /* 8 */
    {10, -18, 11, 0, 0 << 6, 34 << 6, -46, -81, 86, 255}, /* 9 */
    {24, 11, 1, 0, 16 << 6, 64 << 6, 84, 68, -67, 255}, /* 10 */
    {5, 11, 1, 0, -3 << 6, 64 << 6, -84, 68, -67, 255}, /* 11 */
    {7, 11, 13, 0, 1 << 6, 34 << 6, -72, 83, 65, 255}, /* 12 */
    {21, 11, 13, 0, 12 << 6, 34 << 6, 74, 79, 66, 255}, /* 13 */
    {20, -23, 1, 0, -1 << 6, 64 << 6, 74, -98, -32, 255}, /* 14 */
    {26, -13, 1, 0, 6 << 6, 64 << 6, 116, -36, -38, 255}, /* 15 */
    {22, -11, 11, 0, 7 << 6, 34 << 6, 101, -26, 72, 255}, /* 16 */
    {18, -18, 11, 0, -3 << 6, 34 << 6, 48, -78, 88, 255}, /* 17 */
    {26, -13, 1, 0, 7 << 6, 64 << 6, 116, -36, -38, 255}, /* 18 */
    {24, 11, 1, 0, 29 << 6, 64 << 6, 84, 68, -67, 255}, /* 19 */
    {21, 11, 13, 0, 28 << 6, 34 << 6, 74, 79, 66, 255}, /* 20 */
    {22, -11, 11, 0, 8 << 6, 34 << 6, 101, -26, 72, 255}, /* 21 */
    {5, 11, 1, 0, 29 << 6, 64 << 6, -84, 68, -67, 255}, /* 22 */
    {3, -13, 1, 0, 7 << 6, 64 << 6, -119, -20, -39, 255}, /* 23 */
    {6, -11, 11, 0, 8 << 6, 34 << 6, -103, -27, 69, 255}, /* 24 */
    {7, 11, 13, 0, 28 << 6, 34 << 6, -72, 83, 65, 255}, /* 25 */
    {3, -13, 1, 0, 6 << 6, 64 << 6, -119, -20, -39, 255}, /* 26 */
    {9, -23, 1, 0, -1 << 6, 64 << 6, -74, -98, -33, 255}, /* 27 */
    {10, -18, 11, 0, -3 << 6, 34 << 6, -46, -81, 86, 255}, /* 28 */
    {6, -11, 11, 0, 7 << 6, 34 << 6, -102, -29, 71, 255}, /* 29 */
    {10, -18, 11, 0, 4 << 6, 49 << 6, -43, -82, 87, 255}, /* 30 */
    {18, -18, 11, 0, 4 << 6, 49 << 6, 46, -80, 87, 255}, /* 31 */
    {13, 3, 18, 0, 4 << 6, 49 << 6, -7, 9, 126, 255}, /* 32 */
    {22, -11, 11, 0, 4 << 6, 49 << 6, 101, -24, 74, 255}, /* 33 */
    {21, 11, 13, 0, 4 << 6, 49 << 6, 76, 75, 69, 255}, /* 34 */
    {7, 11, 13, 0, 4 << 6, 49 << 6, -68, 85, 65, 255}, /* 35 */
    {6, -11, 11, 0, 4 << 6, 49 << 6, -103, -27, 69, 255}, /* 36 */
};

static Vtx vtx_Bang[] = {
    {6, -16, 186, 0, 0 << 6, 32 << 6, -19, 72, -103, 255}, /* 0 */
    {13, -16, 182, 0, 0 << 6, 32 << 6, 96, 83, -7, 255}, /* 1 */
    {7, -24, 174, 0, 0 << 6, 32 << 6, -39, 113, -44, 255}, /* 2 */
    {3, -8, 190, 0, 0 << 6, 32 << 6, -20, 118, 42, 255}, /* 3 */
    {6, -22, 191, 0, 0 << 6, 32 << 6, 6, -55, 114, 255}, /* 4 */
    {-3, -20, 180, 0, 0 << 6, 32 << 6, -122, 13, -31, 255}, /* 5 */
    {2, -27, 170, 0, 0 << 6, 32 << 6, -119, -16, -40, 255}, /* 6 */
    {11, -31, 173, 0, 0 << 6, 32 << 6, 47, -118, 9, 255}, /* 7 */
    {10, -24, 157, 0, 0 << 6, 32 << 6, 6, 20, -125, 255}, /* 8 */
    {14, -20, 171, 0, 0 << 6, 32 << 6, 88, 90, -15, 255}, /* 9 */
};

static Vtx vtx_LeftHand[] = {
    {83, -3, 147, 0, 0 << 6, 32 << 6, 42, -100, 66, 255}, /* 0 */
    {90, 7, 140, 0, 0 << 6, 32 << 6, 127, 8, 0, 255}, /* 1 */
    {82, 10, 152, 0, 0 << 6, 32 << 6, 44, 37, 113, 255}, /* 2 */
    {82, 16, 141, 0, 0 << 6, 32 << 6, 45, 119, 5, 255}, /* 3 */
    {82, 11, 129, 0, 0 << 6, 32 << 6, 43, 47, -110, 255}, /* 4 */
    {83, -2, 132, 0, 0 << 6, 32 << 6, 41, -94, -74, 255}, /* 5 */
    {70, 11, 149, 0, 0 << 6, 32 << 6, -81, 43, 88, 255}, /* 6 */
    {70, 1, 147, 0, 0 << 6, 32 << 6, -83, -74, 62, 255}, /* 7 */
    {71, 10, 131, 0, 0 << 6, 32 << 6, -67, 35, -102, 255}, /* 8 */
    {69, 17, 139, 0, 0 << 6, 32 << 6, -77, 100, -8, 255}, /* 9 */
    {69, 0, 135, 0, 0 << 6, 32 << 6, -89, -75, -50, 255}, /* 10 */
};

static Vtx vtx_LeftFemur[] = {
    {22, -3, 43, 0, 27 << 6, 0 << 6, 66, -87, 65, 255}, /* 0 */
    {5, -4, 42, 0, 5 << 6, 0 << 6, -66, -91, 60, 255}, /* 1 */
    {8, -3, 11, 0, 7 << 6, 32 << 6, -59, -88, -71, 255}, /* 2 */
    {21, -3, 11, 0, 25 << 6, 32 << 6, 67, -84, -67, 255}, /* 3 */
    {5, -4, 42, 0, 3 << 6, 1 << 6, -66, -91, 60, 255}, /* 4 */
    {6, 12, 42, 0, 3 << 6, 1 << 6, -78, 75, 66, 255}, /* 5 */
    {7, 10, 12, 0, 3 << 6, 30 << 6, -72, 72, -76, 255}, /* 6 */
    {8, -3, 11, 0, 3 << 6, 30 << 6, -59, -88, -71, 255}, /* 7 */
    {21, 13, 42, 0, 3 << 6, 1 << 6, 69, 79, 72, 255}, /* 8 */
    {21, 11, 12, 0, 3 << 6, 30 << 6, 72, 76, -72, 255}, /* 9 */
    {22, -3, 43, 0, 3 << 6, 1 << 6, 66, -87, 65, 255}, /* 10 */
    {21, -3, 11, 0, 3 << 6, 30 << 6, 67, -84, -67, 255}, /* 11 */
};

static Vtx vtx_LeftForearm[] = {
    {48, 12, 130, 0, 0 << 6, 32 << 6, -41, 61, -104, 255}, /* 0 */
    {67, 14, 133, 0, 0 << 6, 32 << 6, 61, 72, -85, 255}, /* 1 */
    {67, 4, 131, 0, 0 << 6, 32 << 6, 60, -63, -92, 255}, /* 2 */
    {47, 2, 132, 0, 0 << 6, 32 << 6, -48, -78, -88, 255}, /* 3 */
    {40, 9, 139, 0, 0 << 6, 32 << 6, -126, 12, -5, 255}, /* 4 */
    {48, 9, 148, 0, 0 << 6, 32 << 6, -52, 15, 115, 255}, /* 5 */
    {47, 0, 144, 0, 0 << 6, 32 << 6, -55, -105, 45, 255}, /* 6 */
    {49, 16, 140, 0, 0 << 6, 32 << 6, -42, 118, 22, 255}, /* 7 */
    {67, -1, 142, 0, 0 << 6, 32 << 6, 53, -111, 30, 255}, /* 8 */
    {72, 8, 141, 0, 0 << 6, 32 << 6, 127, -1, 9, 255}, /* 9 */
    {67, 6, 149, 0, 0 << 6, 32 << 6, 50, -6, 116, 255}, /* 10 */
    {67, 16, 144, 0, 0 << 6, 32 << 6, 54, 107, 43, 255}, /* 11 */
};

static Vtx vtx_Pelvis[] = {
    {20, -1, 85, 0, -24 << 6, 64 << 6, 127, 0, 2, 255}, /* 0 */
    {20, 13, 85, 0, 8 << 6, 64 << 6, 127, 0, 2, 255}, /* 1 */
    {20, 13, 114, 0, 8 << 6, 0 << 6, 127, 0, 2, 255}, /* 2 */
    {20, -1, 114, 0, -24 << 6, 0 << 6, 127, 0, 2, 255}, /* 3 */
    {0, -8, 77, 0, 0 << 6, 32 << 6, 0, -90, -90, 255}, /* 4 */
    {19, -6, 77, 0, 11 << 6, 32 << 6, 72, -65, -82, 255}, /* 5 */
    {0, -10, 99, 0, 0 << 6, 0 << 6, 0, -104, 72, 255}, /* 6 */
    {11, 21, 85, 0, 26 << 6, 20 << 6, 58, 111, -21, 255}, /* 7 */
    {0, 22, 86, 0, 32 << 6, 19 << 6, 0, 126, -15, 255}, /* 8 */
    {0, 20, 99, 0, 32 << 6, 0 << 6, 0, 101, 77, 255}, /* 9 */
    {13, 19, 99, 0, 24 << 6, 0 << 6, 57, 80, 81, 255}, /* 10 */
    {19, -6, 77, 0, 2 << 6, 27 << 6, 72, -65, -82, 255}, /* 11 */
    {0, -8, 77, 0, 2 << 6, 27 << 6, 0, -90, -90, 255}, /* 12 */
    {0, 17, 75, 0, 2 << 6, 27 << 6, 0, 61, -111, 255}, /* 13 */
    {0, 17, 75, 0, 32 << 6, 30 << 6, 0, 61, -111, 255}, /* 14 */
    {20, 12, 78, 0, 2 << 6, 27 << 6, 88, 32, -86, 255}, /* 15 */
    {20, 12, 78, 0, 21 << 6, 28 << 6, 88, 32, -86, 255}, /* 16 */
    {19, 5, 99, 0, 7 << 6, 8 << 6, 98, 9, 81, 255}, /* 17 */
    {13, 19, 99, 0, 7 << 6, 8 << 6, 57, 80, 81, 255}, /* 18 */
    {0, 5, 106, 0, 7 << 6, 8 << 6, 0, -2, 127, 255}, /* 19 */
    {19, 5, 99, 0, 15 << 6, 0 << 6, 98, 9, 81, 255}, /* 20 */
    {14, -4, 100, 0, 9 << 6, 0 << 6, 72, -66, 81, 255}, /* 21 */
    {0, -10, 99, 0, 7 << 6, 8 << 6, 0, -104, 72, 255}, /* 22 */
    {14, -4, 100, 0, 7 << 6, 8 << 6, 72, -66, 81, 255}, /* 23 */
    {0, 20, 99, 0, 7 << 6, 8 << 6, 0, 101, 77, 255}, /* 24 */
    {-19, -6, 77, 0, 11 << 6, 32 << 6, -72, -65, -82, 255}, /* 25 */
    {-11, 21, 85, 0, 26 << 6, 20 << 6, -58, 111, -21, 255}, /* 26 */
    {-13, 19, 99, 0, 24 << 6, 0 << 6, -57, 80, 81, 255}, /* 27 */
    {-19, -6, 77, 0, 2 << 6, 27 << 6, -72, -65, -82, 255}, /* 28 */
    {-20, 12, 78, 0, 2 << 6, 27 << 6, -88, 32, -86, 255}, /* 29 */
    {-20, 12, 78, 0, 21 << 6, 28 << 6, -88, 32, -86, 255}, /* 30 */
    {-19, 5, 99, 0, 7 << 6, 8 << 6, -98, 9, 81, 255}, /* 31 */
    {-13, 19, 99, 0, 7 << 6, 8 << 6, -57, 80, 81, 255}, /* 32 */
    {-14, -4, 100, 0, 9 << 6, 0 << 6, -72, -66, 81, 255}, /* 33 */
    {-19, 5, 99, 0, 15 << 6, 0 << 6, -98, 9, 81, 255}, /* 34 */
    {-14, -4, 100, 0, 7 << 6, 8 << 6, -72, -66, 81, 255}, /* 35 */
};

static Vtx vtx_RightForearm[] = {
    {-48, 12, 130, 0, 0 << 6, 32 << 6, 41, 61, -104, 255}, /* 0 */
    {-47, 2, 132, 0, 0 << 6, 32 << 6, 48, -78, -88, 255}, /* 1 */
    {-67, 4, 131, 0, 0 << 6, 32 << 6, -60, -63, -92, 255}, /* 2 */
    {-67, 14, 133, 0, 0 << 6, 32 << 6, -61, 72, -85, 255}, /* 3 */
    {-40, 9, 139, 0, 0 << 6, 32 << 6, 126, 12, -5, 255}, /* 4 */
    {-48, 9, 148, 0, 0 << 6, 32 << 6, 52, 15, 115, 255}, /* 5 */
    {-47, 0, 144, 0, 0 << 6, 32 << 6, 55, -105, 45, 255}, /* 6 */
    {-49, 16, 140, 0, 0 << 6, 32 << 6, 42, 118, 22, 255}, /* 7 */
    {-67, -1, 142, 0, 0 << 6, 32 << 6, -53, -111, 30, 255}, /* 8 */
    {-67, 6, 149, 0, 0 << 6, 32 << 6, -50, -6, 116, 255}, /* 9 */
    {-72, 8, 141, 0, 0 << 6, 32 << 6, -127, -1, 9, 255}, /* 10 */
    {-67, 16, 144, 0, 0 << 6, 32 << 6, -54, 107, 43, 255}, /* 11 */
};

static Vtx vtx_RightHand[] = {
    {-83, -3, 147, 0, 0 << 6, 32 << 6, -42, -100, 66, 255}, /* 0 */
    {-82, 10, 152, 0, 0 << 6, 32 << 6, -44, 37, 113, 255}, /* 1 */
    {-90, 7, 140, 0, 0 << 6, 32 << 6, -127, 8, 0, 255}, /* 2 */
    {-82, 16, 141, 0, 0 << 6, 32 << 6, -45, 119, 5, 255}, /* 3 */
    {-82, 11, 129, 0, 0 << 6, 32 << 6, -43, 47, -110, 255}, /* 4 */
    {-83, -2, 132, 0, 0 << 6, 32 << 6, -41, -94, -74, 255}, /* 5 */
    {-70, 1, 147, 0, 0 << 6, 32 << 6, 83, -74, 62, 255}, /* 6 */
    {-70, 11, 149, 0, 0 << 6, 32 << 6, 81, 43, 88, 255}, /* 7 */
    {-69, 17, 139, 0, 0 << 6, 32 << 6, 77, 100, -8, 255}, /* 8 */
    {-71, 10, 131, 0, 0 << 6, 32 << 6, 67, 35, -102, 255}, /* 9 */
    {-69, 0, 135, 0, 0 << 6, 32 << 6, 89, -75, -50, 255}, /* 10 */
};

static Vtx vtx_RightFoot[] = {
    {-24, 11, 1, 0, 35 << 6, 1 << 6, -87, 63, -68, 255}, /* 0 */
    {-5, 11, 1, 0, 61 << 6, 1 << 6, 86, 63, -69, 255}, /* 1 */
    {-3, -13, 1, 0, 64 << 6, 24 << 6, 118, -18, -43, 255}, /* 2 */
    {-26, -13, 1, 0, 32 << 6, 24 << 6, -114, -38, -41, 255}, /* 3 */
    {-9, -23, 1, 0, 56 << 6, 32 << 6, 76, -95, -37, 255}, /* 4 */
    {-20, -23, 1, 0, 41 << 6, 32 << 6, -76, -95, -36, 255}, /* 5 */
    {-9, -23, 1, 0, -3 << 6, 64 << 6, 74, -98, -33, 255}, /* 6 */
    {-10, -18, 11, 0, 0 << 6, 34 << 6, 46, -81, 86, 255}, /* 7 */
    {-18, -18, 11, 0, 3 << 6, 34 << 6, -46, -80, 87, 255}, /* 8 */
    {-20, -23, 1, 0, 8 << 6, 64 << 6, -74, -98, -32, 255}, /* 9 */
    {-24, 11, 1, 0, 16 << 6, 64 << 6, -84, 68, -67, 255}, /* 10 */
    {-21, 11, 13, 0, 12 << 6, 34 << 6, -74, 79, 66, 255}, /* 11 */
    {-7, 11, 13, 0, 1 << 6, 34 << 6, 72, 83, 65, 255}, /* 12 */
    {-5, 11, 1, 0, -3 << 6, 64 << 6, 84, 68, -67, 255}, /* 13 */
    {-20, -23, 1, 0, -1 << 6, 64 << 6, -74, -98, -32, 255}, /* 14 */
    {-18, -18, 11, 0, -3 << 6, 34 << 6, -48, -78, 88, 255}, /* 15 */
    {-22, -11, 11, 0, 7 << 6, 34 << 6, -101, -26, 72, 255}, /* 16 */
    {-26, -13, 1, 0, 6 << 6, 64 << 6, -116, -36, -38, 255}, /* 17 */
    {-26, -13, 1, 0, 7 << 6, 64 << 6, -116, -36, -38, 255}, /* 18 */
    {-22, -11, 11, 0, 8 << 6, 34 << 6, -101, -26, 72, 255}, /* 19 */
    {-21, 11, 13, 0, 28 << 6, 34 << 6, -74, 79, 66, 255}, /* 20 */
    {-24, 11, 1, 0, 29 << 6, 64 << 6, -84, 68, -67, 255}, /* 21 */
    {-5, 11, 1, 0, 29 << 6, 64 << 6, 84, 68, -67, 255}, /* 22 */
    {-7, 11, 13, 0, 28 << 6, 34 << 6, 72, 83, 65, 255}, /* 23 */
    {-6, -11, 11, 0, 8 << 6, 34 << 6, 103, -27, 69, 255}, /* 24 */
    {-3, -13, 1, 0, 7 << 6, 64 << 6, 119, -20, -39, 255}, /* 25 */
    {-3, -13, 1, 0, 6 << 6, 64 << 6, 119, -20, -39, 255}, /* 26 */
    {-6, -11, 11, 0, 7 << 6, 34 << 6, 102, -29, 71, 255}, /* 27 */
    {-10, -18, 11, 0, -3 << 6, 34 << 6, 46, -81, 86, 255}, /* 28 */
    {-9, -23, 1, 0, -1 << 6, 64 << 6, 74, -98, -33, 255}, /* 29 */
    {-10, -18, 11, 0, 4 << 6, 49 << 6, 43, -82, 87, 255}, /* 30 */
    {-13, 3, 18, 0, 4 << 6, 49 << 6, 7, 9, 126, 255}, /* 31 */
    {-18, -18, 11, 0, 4 << 6, 49 << 6, -46, -80, 87, 255}, /* 32 */
    {-22, -11, 11, 0, 4 << 6, 49 << 6, -101, -24, 74, 255}, /* 33 */
    {-21, 11, 13, 0, 4 << 6, 49 << 6, -76, 75, 69, 255}, /* 34 */
    {-7, 11, 13, 0, 4 << 6, 49 << 6, 68, 85, 65, 255}, /* 35 */
    {-6, -11, 11, 0, 4 << 6, 49 << 6, 103, -27, 69, 255}, /* 36 */
};

static Vtx vtx_RightArm[] = {
    {-25, 13, 132, 0, 0 << 6, 32 << 6, 72, 64, -83, 255}, /* 0 */
    {-45, 13, 125, 0, 0 << 6, 32 << 6, -71, 47, -94, 255}, /* 1 */
    {-48, 20, 139, 0, 0 << 6, 32 << 6, -89, 91, 7, 255}, /* 2 */
    {-25, 15, 143, 0, 0 << 6, 32 << 6, 66, 102, 37, 255}, /* 3 */
    {-20, 7, 139, 0, 0 << 6, 32 << 6, 127, -1, 1, 255}, /* 4 */
    {-25, -2, 142, 0, 0 << 6, 32 << 6, 64, -104, 36, 255}, /* 5 */
    {-26, 6, 149, 0, 0 << 6, 32 << 6, 62, 1, 111, 255}, /* 6 */
    {-25, 2, 131, 0, 0 << 6, 32 << 6, 69, -66, -84, 255}, /* 7 */
    {-51, 10, 151, 0, 0 << 6, 32 << 6, -98, 8, 81, 255}, /* 8 */
    {-41, 7, 139, 0, 0 << 6, 32 << 6, -125, 1, -22, 255}, /* 9 */
    {-49, -4, 146, 0, 0 << 6, 32 << 6, -89, -88, 23, 255}, /* 10 */
    {-46, -2, 129, 0, 0 << 6, 32 << 6, -77, -64, -78, 255}, /* 11 */
};

static Vtx vtx_Sword[] = {
    {-12, 23, 150, 0, 0 << 6, 32 << 6, 6, 127, 2, 255}, /* 0 */
    {16, 22, 105, 0, 0 << 6, 32 << 6, 9, 127, 3, 255}, /* 1 */
    {11, 23, 101, 0, 0 << 6, 32 << 6, 9, 127, 3, 255}, /* 2 */
    {-18, 23, 146, 0, 0 << 6, 32 << 6, 6, 127, 2, 255}, /* 3 */
    {19, 22, 93, 0, 0 << 6, 32 << 6, 12, 126, 5, 255}, /* 4 */
    {-16, 24, 153, 0, 0 << 6, 32 << 6, 78, 89, 45, 255}, /* 5 */
    {-19, 24, 151, 0, 0 << 6, 32 << 6, -74, 90, -50, 255}, /* 6 */
    {-28, 25, 167, 0, 0 << 6, 32 << 6, -49, 85, -81, 255}, /* 7 */
    {-26, 25, 168, 0, 0 << 6, 32 << 6, 95, 84, 8, 255}, /* 8 */
    {-16, 22, 153, 0, 0 << 6, 32 << 6, 74, -90, 50, 255}, /* 9 */
    {-26, 22, 168, 0, 0 << 6, 32 << 6, 91, -88, 13, 255}, /* 10 */
    {-19, 22, 152, 0, 0 << 6, 32 << 6, -78, -89, -45, 255}, /* 11 */
    {-28, 22, 167, 0, 0 << 6, 32 << 6, -52, -87, -77, 255}, /* 12 */
    {-12, 21, 150, 0, 0 << 6, 32 << 6, 92, -79, -36, 255}, /* 13 */
    {-18, 21, 146, 0, 0 << 6, 32 << 6, -10, -77, -100, 255}, /* 14 */
    {-18, 25, 146, 0, 0 << 6, 32 << 6, -5, 74, -103, 255}, /* 15 */
    {-12, 25, 150, 0, 0 << 6, 32 << 6, 97, 72, -40, 255}, /* 16 */
    {-13, 21, 155, 0, 0 << 6, 32 << 6, 36, -71, 99, 255}, /* 17 */
    {-13, 25, 155, 0, 0 << 6, 32 << 6, 42, 72, 96, 255}, /* 18 */
    {-22, 25, 150, 0, 0 << 6, 32 << 6, -102, 75, 7, 255}, /* 19 */
    {-22, 21, 150, 0, 0 << 6, 32 << 6, -107, -68, 8, 255}, /* 20 */
    {-26, 22, 168, 0, 0 << 6, 32 << 6, 91, -88, 13, 255}, /* 21 */
    {-26, 25, 168, 0, 0 << 6, 32 << 6, 95, 84, 8, 255}, /* 22 */
    {-26, 26, 170, 0, 0 << 6, 32 << 6, 81, 88, 41, 255}, /* 23 */
    {-26, 21, 170, 0, 0 << 6, 32 << 6, 77, -90, 46, 255}, /* 24 */
    {-30, 21, 168, 0, 0 << 6, 32 << 6, -76, -89, -50, 255}, /* 25 */
    {-29, 23, 172, 0, 0 << 6, 32 << 6, -6, -55, 115, 255}, /* 26 */
    {-31, 23, 171, 0, 0 << 6, 32 << 6, -101, -54, 55, 255}, /* 27 */
    {-28, 25, 167, 0, 0 << 6, 32 << 6, -49, 85, -81, 255}, /* 28 */
    {-28, 22, 167, 0, 0 << 6, 32 << 6, -52, -87, -77, 255}, /* 29 */
    {-30, 26, 168, 0, 0 << 6, 32 << 6, -72, 89, -55, 255}, /* 30 */
    {-29, 25, 172, 0, 0 << 6, 32 << 6, -3, 60, 112, 255}, /* 31 */
    {-31, 25, 171, 0, 0 << 6, 32 << 6, -98, 61, 52, 255}, /* 32 */
};

static Vtx vtx_Pad[] = {
    {-12, 16, 145, 0, 16 << 6, 16 << 6, 56, 108, -37, 255}, /* 0 */
    {-28, 6, 147, 0, 16 << 6, 16 << 6, 38, -4, -121, 255}, /* 1 */
    {-31, 17, 141, 0, 16 << 6, 16 << 6, -23, 105, -68, 255}, /* 2 */
    {-28, -4, 143, 0, 16 << 6, 16 << 6, -24, -112, -55, 255}, /* 3 */
    {-12, -2, 145, 0, 16 << 6, 16 << 6, 65, -100, -42, 255}, /* 4 */
    {-39, 7, 139, 0, 16 << 6, 16 << 6, -100, -8, -77, 255}, /* 5 */
    {-11, 6, 154, 0, 16 << 6, 16 << 6, 77, 1, 101, 255}, /* 6 */
    {-30, 6, 153, 0, 16 << 6, 16 << 6, -54, 5, 115, 255}, /* 7 */
};

static Vtx vtx_RightFemur[] = {
    {-22, -3, 43, 0, 27 << 6, 0 << 6, -66, -87, 65, 255}, /* 0 */
    {-21, -3, 11, 0, 25 << 6, 32 << 6, -67, -84, -67, 255}, /* 1 */
    {-8, -3, 11, 0, 7 << 6, 32 << 6, 59, -88, -71, 255}, /* 2 */
    {-5, -4, 42, 0, 5 << 6, 0 << 6, 66, -91, 60, 255}, /* 3 */
    {-5, -4, 42, 0, 3 << 6, 1 << 6, 66, -91, 60, 255}, /* 4 */
    {-8, -3, 11, 0, 3 << 6, 30 << 6, 59, -88, -71, 255}, /* 5 */
    {-7, 10, 12, 0, 3 << 6, 30 << 6, 72, 72, -76, 255}, /* 6 */
    {-6, 12, 42, 0, 3 << 6, 1 << 6, 78, 75, 66, 255}, /* 7 */
    {-21, 11, 12, 0, 3 << 6, 30 << 6, -72, 76, -72, 255}, /* 8 */
    {-21, 13, 42, 0, 3 << 6, 1 << 6, -69, 79, 72, 255}, /* 9 */
    {-21, -3, 11, 0, 3 << 6, 30 << 6, -67, -84, -67, 255}, /* 10 */
    {-22, -3, 43, 0, 3 << 6, 1 << 6, -66, -87, 65, 255}, /* 11 */
};

static Vtx vtx_LeftLeg[] = {
    {19, -2, 43, 0, 3 << 6, 14 << 6, 80, -81, -56, 255}, /* 0 */
    {20, 7, 43, 0, 3 << 6, 14 << 6, 113, 32, -49, 255}, /* 1 */
    {21, 5, 76, 0, 3 << 6, 14 << 6, 119, 21, 40, 255}, /* 2 */
    {18, -7, 76, 0, 3 << 6, 14 << 6, 79, -91, 40, 255}, /* 3 */
    {8, 10, 43, 0, 3 << 6, 14 << 6, -72, 84, -62, 255}, /* 4 */
    {15, 10, 43, 0, 3 << 6, 14 << 6, 39, 105, -59, 255}, /* 5 */
    {15, 4, 38, 0, 3 << 6, 14 << 6, 13, 2, -126, 255}, /* 6 */
    {12, -2, 43, 0, 3 << 6, 14 << 6, -33, -104, -65, 255}, /* 7 */
    {7, 1, 43, 0, 3 << 6, 14 << 6, -105, -30, -65, 255}, /* 8 */
    {12, 4, 87, 0, 3 << 6, 14 << 6, -3, -1, 127, 255}, /* 9 */
    {7, 14, 76, 0, 3 << 6, 14 << 6, -74, 97, 36, 255}, /* 10 */
    {15, 16, 76, 0, 3 << 6, 14 << 6, 46, 112, 39, 255}, /* 11 */
    {10, -8, 76, 0, 3 << 6, 14 << 6, -38, -116, 34, 255}, /* 12 */
    {1, 2, 75, 0, 3 << 6, 14 << 6, -121, -21, 31, 255}, /* 13 */
};


/*********************************
          Display Lists
*********************************/

static Gfx gfx_RightLeg[] = {
    
    /* Texture Change Pants */
    gsSPVertex(vtx_RightLeg, 14, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(4, 5, 6, 0),
    gsSP1Triangle(7, 5, 8, 0),
    gsSP1Triangle(6, 5, 3, 0),
    gsSP1Triangle(8, 5, 4, 0),
    gsSP1Triangle(0, 5, 7, 0),
    gsSP1Triangle(3, 5, 0, 0),
    gsSP1Triangle(1, 9, 2, 0),
    gsSP2Triangles(6, 10, 11, 0, 6, 11, 4, 0),
    gsSP2Triangles(8, 12, 13, 0, 8, 13, 7, 0),
    gsSP2Triangles(3, 2, 10, 0, 3, 10, 6, 0),
    gsSP2Triangles(4, 11, 12, 0, 4, 12, 8, 0),
    gsSP2Triangles(7, 13, 1, 0, 7, 1, 0, 0),
    gsSP1Triangle(10, 9, 11, 0),
    gsSP1Triangle(12, 9, 13, 0),
    gsSP1Triangle(2, 9, 10, 0),
    gsSP1Triangle(11, 9, 12, 0),
    gsSP1Triangle(13, 9, 1, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftArm[] = {
    
    /* Texture Change Gambeson */
    gsSPVertex(vtx_LeftArm, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(1, 0, 4, 0),
    gsSP1Triangle(5, 6, 4, 0),
    gsSP1Triangle(0, 7, 4, 0),
    gsSP1Triangle(6, 1, 4, 0),
    gsSP1Triangle(7, 5, 4, 0),
    gsSP1Triangle(8, 9, 10, 0),
    gsSP2Triangles(6, 5, 9, 0, 6, 9, 8, 0),
    gsSP2Triangles(7, 0, 3, 0, 7, 3, 11, 0),
    gsSP2Triangles(1, 6, 8, 0, 1, 8, 2, 0),
    gsSP2Triangles(5, 7, 11, 0, 5, 11, 9, 0),
    gsSP1Triangle(11, 3, 10, 0),
    gsSP1Triangle(2, 8, 10, 0),
    gsSP1Triangle(9, 11, 10, 0),
    gsSP1Triangle(3, 2, 10, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Chest[] = {
    
    /* Texture Change Scabbard */
    gsDPSetCombineMode(G_CC_PRIMLITE, G_CC_PRIMLITE),
    gsDPPipeSync(),
    gsSPVertex(vtx_Chest+45, 10, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(1, 4, 5, 0, 1, 5, 2, 0),
    gsSP2Triangles(4, 6, 7, 0, 4, 7, 5, 0),
    gsSP2Triangles(6, 0, 3, 0, 6, 3, 7, 0),
    gsSP1Triangle(2, 5, 8, 0),
    gsSP2Triangles(6, 4, 1, 0, 6, 1, 0, 0),
    gsSP1Triangle(7, 3, 9, 0),
    gsSP2Triangles(5, 7, 9, 0, 5, 9, 8, 0),
    gsSP2Triangles(3, 2, 8, 0, 3, 8, 9, 0),

    /* Texture Change BackTex */
    gsDPSetCombineMode(G_CC_MODULATEIDECALA, G_CC_MODULATEIDECALA),
    gsDPLoadTextureBlock(tex_Back, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_Chest, 21, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(2, 1, 3, 0),
    gsSP2Triangles(0, 2, 4, 0, 0, 4, 5, 0),
    gsSP2Triangles(2, 3, 6, 0, 2, 6, 4, 0),
    gsSP1Triangle(5, 4, 7, 0),
    gsSP2Triangles(4, 6, 8, 0, 4, 8, 9, 0),
    gsSP2Triangles(7, 4, 9, 0, 7, 9, 10, 0),
    gsSP2Triangles(9, 8, 11, 0, 9, 11, 12, 0),
    gsSP1Triangle(10, 9, 12, 0),
    gsSP1Triangle(13, 14, 1, 0),
    gsSP1Triangle(14, 3, 1, 0),
    gsSP2Triangles(13, 15, 16, 0, 13, 16, 14, 0),
    gsSP2Triangles(14, 16, 6, 0, 14, 6, 3, 0),
    gsSP1Triangle(15, 17, 16, 0),
    gsSP2Triangles(16, 18, 8, 0, 16, 8, 6, 0),
    gsSP2Triangles(17, 19, 18, 0, 17, 18, 16, 0),
    gsSP2Triangles(18, 20, 11, 0, 18, 11, 8, 0),
    gsSP1Triangle(19, 20, 18, 0),

    /* Texture Change ChestTex */
    gsDPLoadTextureBlock(tex_Chest, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsSPVertex(vtx_Chest+21, 24, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(2, 1, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(2, 3, 8, 0, 2, 8, 9, 0),
    gsSP2Triangles(0, 2, 9, 0, 0, 9, 10, 0),
    gsSP2Triangles(9, 8, 4, 0, 9, 4, 7, 0),
    gsSP2Triangles(10, 9, 7, 0, 10, 7, 11, 0),
    gsSP1Triangle(6, 5, 12, 0),
    gsSP1Triangle(13, 12, 14, 0),
    gsSP1Triangle(6, 12, 13, 0),
    gsSP2Triangles(7, 6, 13, 0, 7, 13, 11, 0),
    gsSP1Triangle(0, 15, 1, 0),
    gsSP1Triangle(15, 16, 1, 0),
    gsSP2Triangles(17, 18, 19, 0, 17, 19, 20, 0),
    gsSP2Triangles(15, 21, 22, 0, 15, 22, 16, 0),
    gsSP2Triangles(0, 10, 21, 0, 0, 21, 15, 0),
    gsSP2Triangles(21, 18, 17, 0, 21, 17, 22, 0),
    gsSP2Triangles(10, 11, 18, 0, 10, 18, 21, 0),
    gsSP1Triangle(19, 23, 20, 0),
    gsSP1Triangle(13, 14, 23, 0),
    gsSP1Triangle(19, 13, 23, 0),
    gsSP2Triangles(18, 11, 13, 0, 18, 13, 19, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Head[] = {

    /* Texture Change FaceTex */
    gsDPSetPrimColor(0, 0, 250, 210, 184, 255),
    gsSPVertex(vtx_Head, 15, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(3, 0, 4, 0),
    gsSP1Triangle(5, 0, 6, 0),
    gsSP1Triangle(4, 0, 2, 0),
    gsSP1Triangle(1, 0, 7, 0),
    gsSP1Triangle(1, 7, 8, 0),
    gsSP1Triangle(0, 9, 6, 0),
    gsSP1Triangle(3, 9, 0, 0),
    gsSP1Triangle(7, 0, 5, 0),
    gsSP1Triangle(10, 2, 1, 0),
    gsSP1Triangle(3, 4, 10, 0),
    gsSP1Triangle(11, 12, 10, 0),
    gsSP1Triangle(4, 2, 10, 0),
    gsSP1Triangle(1, 13, 10, 0),
    gsSP1Triangle(1, 8, 13, 0),
    gsSP1Triangle(10, 12, 14, 0),
    gsSP1Triangle(3, 10, 14, 0),
    gsSP1Triangle(13, 11, 10, 0),
    
    /* Texture Change Skin */
    gsDPSetCombineMode(G_CC_PRIMLITE, G_CC_PRIMLITE),
    gsSPVertex(vtx_Head+71, 25, 0),
    gsSP1Triangle(0 , 1 , 2 , 0),
    gsSP1Triangle(0 , 2 , 3 , 0),
    gsSP1Triangle(4 , 0 , 3 , 0),
    gsSP1Triangle(1 , 0 , 4 , 0),
    gsSP1Triangle(5 , 6 , 7 , 0),
    gsSP1Triangle(7 , 6 , 8 , 0),
    gsSP1Triangle(8 , 6 , 9 , 0),
    gsSP1Triangle(7 , 10, 11, 0),
    gsSP1Triangle(11, 12, 7 , 0),
    gsSP1Triangle(12, 5 , 7 , 0),
    gsSP1Triangle(7 , 8 , 13, 0),
    gsSP1Triangle(13, 10, 7 , 0),
    gsSP1Triangle(14, 15, 16, 0),
    gsSP1Triangle(15, 17, 16, 0),
    gsSP1Triangle(17, 18, 16, 0),
    gsSP1Triangle(15, 11, 10, 0),
    gsSP1Triangle(11, 15, 12, 0),
    gsSP1Triangle(12, 15, 14, 0),
    gsSP1Triangle(15, 19, 17, 0),
    gsSP1Triangle(19, 15, 10, 0),
    gsSP1Triangle(20, 21, 22, 0),
    gsSP1Triangle(20, 23, 21, 0),
    gsSP1Triangle(24, 23, 20, 0),
    gsSP1Triangle(22, 24, 20, 0),
    
    /* Texture Change Hair */
    gsDPSetPrimColor(0, 0, 175, 42, 44, 255),
    gsSPVertex(vtx_Head+15, 20, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(3, 4, 5, 0),
    gsSP1Triangle(6, 5, 7, 0),
    gsSP1Triangle(5, 1, 3, 0),
    gsSP1Triangle(1, 8, 9, 0),
    gsSP1Triangle(1, 0, 3, 0),
    gsSP1Triangle(2, 1, 10, 0),
    gsSP1Triangle(9, 10, 1, 0),
    gsSP1Triangle(11, 7, 4, 0),
    gsSP1Triangle(12, 10, 9, 0),
    gsSP1Triangle(12, 2, 10, 0),
    gsSP1Triangle(4, 7, 5, 0),
    gsSP2Triangles(5, 6, 8, 0, 5, 8, 1, 0),
    gsSP1Triangle(13, 14, 15, 0),
    gsSP1Triangle(16, 17, 18, 0),
    gsSP1Triangle(6, 7, 17, 0),
    gsSP1Triangle(17, 16, 15, 0),
    gsSP1Triangle(15, 9, 8, 0),
    gsSP1Triangle(15, 16, 13, 0),
    gsSP1Triangle(14, 19, 15, 0),
    gsSP1Triangle(9, 15, 19, 0),
    gsSP1Triangle(11, 18, 7, 0),
    gsSP1Triangle(12, 9, 19, 0),
    gsSP1Triangle(12, 19, 14, 0),
    gsSP1Triangle(18, 17, 7, 0),
    gsSP2Triangles(17, 15, 8, 0, 17, 8, 6, 0),
    
    gsSPVertex(vtx_Head+35, 18, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(0, 3, 1, 0),
    gsSP1Triangle(1, 3, 4, 0),
    gsSP1Triangle(2, 1, 4, 0),
    gsSP1Triangle(0, 2, 5, 0),
    gsSP1Triangle(0, 5, 3, 0),
    gsSP1Triangle(5, 4, 3, 0),
    gsSP1Triangle(2, 4, 5, 0),
    gsSP1Triangle(6, 7, 8, 0),
    gsSP1Triangle(6, 9, 7, 0),
    gsSP1Triangle(7, 9, 10, 0),
    gsSP1Triangle(8, 7, 10, 0),
    gsSP1Triangle(6, 8, 11, 0),
    gsSP1Triangle(6, 11, 9, 0),
    gsSP1Triangle(11, 10, 9, 0),
    gsSP1Triangle(8, 10, 11, 0),
    gsSP1Triangle(12, 13, 14, 0),
    gsSP1Triangle(12, 15, 13, 0),
    gsSP1Triangle(13, 15, 16, 0),
    gsSP1Triangle(14, 13, 16, 0),
    gsSP1Triangle(12, 14, 17, 0),
    gsSP1Triangle(12, 17, 15, 0),
    gsSP1Triangle(17, 16, 15, 0),
    gsSP1Triangle(14, 16, 17, 0),
    
    gsSPVertex(vtx_Head+53, 18, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(0, 4, 1, 0),
    gsSP1Triangle(1, 4, 5, 0),
    gsSP2Triangles(5, 6, 7, 0, 5, 7, 8, 0),
    gsSP2Triangles(6, 0, 3, 0, 6, 3, 7, 0),
    gsSP1Triangle(0, 6, 4, 0),
    gsSP1Triangle(6, 5, 4, 0),
    gsSP2Triangles(1, 5, 8, 0, 1, 8, 2, 0),
    gsSP1Triangle(8, 3, 2, 0),
    gsSP1Triangle(8, 7, 3, 0),
    gsSP2Triangles(9, 10, 11, 0, 9, 11, 12, 0),
    gsSP1Triangle(9, 12, 13, 0),
    gsSP1Triangle(12, 14, 13, 0),
    gsSP2Triangles(14, 15, 16, 0, 14, 16, 17, 0),
    gsSP2Triangles(17, 16, 10, 0, 17, 10, 9, 0),
    gsSP1Triangle(9, 13, 17, 0),
    gsSP1Triangle(17, 13, 14, 0),
    gsSP2Triangles(12, 11, 15, 0, 12, 15, 14, 0),
    gsSP1Triangle(15, 11, 10, 0),
    gsSP1Triangle(15, 10, 16, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Ponytail[] = {
    
    /* Texture Change Hair */
    gsSPVertex(vtx_Ponytail, 18, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(0, 3, 1, 0),
    gsSP1Triangle(1, 3, 4, 0),
    gsSP1Triangle(2, 1, 4, 0),
    gsSP1Triangle(0, 2, 5, 0),
    gsSP1Triangle(0, 5, 3, 0),
    gsSP1Triangle(2, 4, 5, 0),
    gsSP1Triangle(6, 7, 8, 0),
    gsSP1Triangle(6, 9, 7, 0),
    gsSP1Triangle(7, 9, 10, 0),
    gsSP1Triangle(8, 7, 10, 0),
    gsSP1Triangle(6, 8, 11, 0),
    gsSP1Triangle(6, 11, 9, 0),
    gsSP1Triangle(11, 10, 9, 0),
    gsSP1Triangle(8, 10, 11, 0),
    gsSP1Triangle(12, 13, 14, 0),
    gsSP1Triangle(12, 15, 13, 0),
    gsSP1Triangle(13, 15, 16, 0),
    gsSP1Triangle(14, 13, 16, 0),
    gsSP1Triangle(12, 14, 17, 0),
    gsSP1Triangle(12, 17, 15, 0),
    gsSP1Triangle(17, 16, 15, 0),
    gsSP1Triangle(14, 16, 17, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftFoot[] = {
    
    /* Texture Change BootTex */
    gsDPLoadTextureBlock(tex_Boot, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_LeftFoot, 6, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(1, 4, 5, 0, 1, 5, 2, 0),
    
    /* Texture Change PantsTex */
    gsDPLoadTextureBlock(tex_Pants, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_LeftFoot+6, 31, 0),
    gsSP2Triangles(0 , 1 , 2 , 0, 0 , 2 , 3 , 0),
    gsSP2Triangles(4 , 5 , 6 , 0, 4 , 6 , 7 , 0),
    gsSP2Triangles(8 , 9 , 10, 0, 8 , 10, 11, 0),
    gsSP2Triangles(12, 13, 14, 0, 12, 14, 15, 0),
    gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
    gsSP2Triangles(20, 21, 22, 0, 20, 22, 23, 0),
    gsSP1Triangle (24, 25, 26, 0),
    gsSP1Triangle (27, 28, 26, 0),
    gsSP1Triangle (29, 30, 26, 0),
    gsSP1Triangle (25, 27, 26, 0),
    gsSP1Triangle (28, 29, 26, 0),
    gsSP1Triangle (30, 24, 26, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Bang[] = {
    
    /* Texture Change Hair */
    gsSPVertex(vtx_Bang, 10, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(0, 3, 1, 0),
    gsSP1Triangle(1, 3, 4, 0),
    gsSP1Triangle(5, 2, 6, 0),
    gsSP1Triangle(0, 2, 5, 0),
    gsSP1Triangle(0, 5, 3, 0),
    gsSP1Triangle(5, 4, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP1Triangle(8, 9, 7, 0),
    gsSP1Triangle(8, 7, 6, 0),
    gsSP2Triangles(1, 4, 7, 0, 1, 7, 9, 0),
    gsSP1Triangle(2, 1, 9, 0),
    gsSP1Triangle(6, 2, 8, 0),
    gsSP1Triangle(9, 8, 2, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftHand[] = {
    
    /* Texture Change Skin */
    gsSPVertex(vtx_LeftHand, 11, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(3, 1, 4, 0),
    gsSP1Triangle(5, 1, 0, 0),
    gsSP1Triangle(2, 1, 3, 0),
    gsSP1Triangle(4, 1, 5, 0),
    gsSP2Triangles(0, 2, 6, 0, 0, 6, 7, 0),
    gsSP2Triangles(3, 4, 8, 0, 3, 8, 9, 0),
    gsSP2Triangles(5, 0, 7, 0, 5, 7, 10, 0),
    gsSP2Triangles(2, 3, 9, 0, 2, 9, 6, 0),
    gsSP2Triangles(4, 5, 10, 0, 4, 10, 8, 0),
    gsSP1Triangle(6, 9, 7, 0),
    gsSP1Triangle(7, 9, 10, 0),
    gsSP1Triangle(8, 10, 9, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftFemur[] = {
    
    /* Texture Change BootTex */
    gsDPLoadTextureBlock(tex_Boot, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_CLAMP, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_LeftFemur, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(5, 8, 9, 0, 5, 9, 6, 0),
    gsSP2Triangles(8, 10, 11, 0, 8, 11, 9, 0),
    gsSP2Triangles(7, 6, 9, 0, 7, 9, 11, 0),
    gsSP2Triangles(10, 8, 5, 0, 10, 5, 4, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftForearm[] = {
    
    /* Texture Change Skin */
    gsSPVertex(vtx_LeftForearm, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(3, 4, 0, 0),
    gsSP1Triangle(5, 4, 6, 0),
    gsSP1Triangle(0, 4, 7, 0),
    gsSP1Triangle(6, 4, 3, 0),
    gsSP1Triangle(7, 4, 5, 0),
    gsSP1Triangle(8, 9, 10, 0),
    gsSP2Triangles(6, 8, 10, 0, 6, 10, 5, 0),
    gsSP2Triangles(7, 11, 1, 0, 7, 1, 0, 0),
    gsSP2Triangles(3, 2, 8, 0, 3, 8, 6, 0),
    gsSP2Triangles(5, 10, 11, 0, 5, 11, 7, 0),
    gsSP1Triangle(11, 9, 1, 0),
    gsSP1Triangle(2, 9, 8, 0),
    gsSP1Triangle(10, 9, 11, 0),
    gsSP1Triangle(1, 9, 2, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Pelvis[] = {

    /* Texture Change KnifeSheatheTex */
    gsSPClearGeometryMode(G_CULL_BACK),
    gsDPSetRenderMode(G_RM_AA_ZB_TEX_EDGE, G_RM_AA_ZB_TEX_EDGE2),
    gsDPLoadTextureBlock(tex_KnifeSheathe, G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 64, 0, G_TX_MIRROR, G_TX_CLAMP, 3, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_Pelvis, 4, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    
    /* Texture Change PantsTex */
    gsSPSetGeometryMode(G_CULL_BACK),
    gsDPSetRenderMode(G_RM_AA_ZB_OPA_SURF, G_RM_AA_ZB_OPA_SURF2),
    gsDPLoadTextureBlock(tex_Pants, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_Pelvis+4, 32, 0),
    gsSP1Triangle (0,  1,  2, 0),
    gsSP2Triangles(3,  4,  5, 0, 3, 5, 6, 0),
    gsSP1Triangle (7,  8,  9, 0),
    gsSP1Triangle (4,  3,  10, 0),
    gsSP1Triangle (11, 7,  9, 0),
    gsSP1Triangle (3,  12, 10, 0),
    gsSP1Triangle (13, 14, 15, 0),
    gsSP2Triangles(1,  12, 16, 0, 1, 16, 17, 0),
    gsSP2Triangles(12, 3,  6, 0, 12, 6, 16, 0),
    gsSP1Triangle (18, 19, 15, 0),
    gsSP1Triangle (19, 13, 15, 0),
    gsSP1Triangle (14, 20, 15, 0),
    gsSP1Triangle (2,  1,  17, 0),
    gsSP1Triangle (0,  2,  21, 0),
    gsSP2Triangles(22, 23, 5, 0, 22, 5, 4, 0),
    gsSP1Triangle (24, 9,  8, 0),
    gsSP1Triangle (4,  10, 22, 0),
    gsSP1Triangle (25, 9,  24, 0),
    gsSP1Triangle (22, 10, 26, 0),
    gsSP1Triangle (27, 15, 28, 0),
    gsSP2Triangles(21, 29, 30, 0, 21, 30, 26, 0),
    gsSP2Triangles(26, 30, 23, 0, 26, 23, 22, 0),
    gsSP1Triangle (18, 15, 31, 0),
    gsSP1Triangle (31, 15, 27, 0),
    gsSP1Triangle (28, 15, 20, 0),
    gsSP1Triangle (2,  29, 21, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_RightForearm[] = {
    
    /* Texture Change Skin */
    gsSPVertex(vtx_RightForearm, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(1, 0, 4, 0),
    gsSP1Triangle(5, 6, 4, 0),
    gsSP1Triangle(0, 7, 4, 0),
    gsSP1Triangle(6, 1, 4, 0),
    gsSP1Triangle(7, 5, 4, 0),
    gsSP1Triangle(8, 9, 10, 0),
    gsSP2Triangles(6, 5, 9, 0, 6, 9, 8, 0),
    gsSP2Triangles(7, 0, 3, 0, 7, 3, 11, 0),
    gsSP2Triangles(1, 6, 8, 0, 1, 8, 2, 0),
    gsSP2Triangles(5, 7, 11, 0, 5, 11, 9, 0),
    gsSP1Triangle(11, 3, 10, 0),
    gsSP1Triangle(2, 8, 10, 0),
    gsSP1Triangle(9, 11, 10, 0),
    gsSP1Triangle(3, 2, 10, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_RightHand[] = {
    
    /* Texture Change Skin */
    gsSPVertex(vtx_RightHand, 11, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(3, 4, 2, 0),
    gsSP1Triangle(5, 0, 2, 0),
    gsSP1Triangle(1, 3, 2, 0),
    gsSP1Triangle(4, 5, 2, 0),
    gsSP2Triangles(0, 6, 7, 0, 0, 7, 1, 0),
    gsSP2Triangles(3, 8, 9, 0, 3, 9, 4, 0),
    gsSP2Triangles(5, 10, 6, 0, 5, 6, 0, 0),
    gsSP2Triangles(1, 7, 8, 0, 1, 8, 3, 0),
    gsSP2Triangles(4, 9, 10, 0, 4, 10, 5, 0),
    gsSP1Triangle(7, 6, 8, 0),
    gsSP1Triangle(6, 10, 8, 0),
    gsSP1Triangle(9, 8, 10, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_RightFoot[] = {
    
    /* Texture Change BootTex */
    gsDPLoadTextureBlock(tex_Boot, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_RightFoot, 6, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(3, 2, 4, 0, 3, 4, 5, 0),
    
    /* Texture Change PantsTex */
    gsDPLoadTextureBlock(tex_Pants, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, G_TX_MIRROR, G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSPVertex(vtx_RightFoot+6, 31, 0),
    gsSP2Triangles(0 , 1 , 2 , 0, 0 , 2 , 3 , 0),
    gsSP2Triangles(4 , 5 , 6 , 0, 4 , 6 , 7 , 0),
    gsSP2Triangles(8 , 9 , 10, 0, 8 , 10, 11, 0),
    gsSP2Triangles(12, 13, 14, 0, 12, 14, 15, 0),
    gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
    gsSP2Triangles(20, 21, 22, 0, 20, 22, 23, 0),
    gsSP1Triangle (24, 25, 26, 0),
    gsSP1Triangle (27, 25, 28, 0),
    gsSP1Triangle (29, 25, 30, 0),
    gsSP1Triangle (26, 25, 27, 0),
    gsSP1Triangle (28, 25, 29, 0),
    gsSP1Triangle (30, 25, 24, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_RightArm[] = {
    
    /* Texture Change Gambeson */
    gsSPVertex(vtx_RightArm, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(3, 4, 0, 0),
    gsSP1Triangle(5, 4, 6, 0),
    gsSP1Triangle(0, 4, 7, 0),
    gsSP1Triangle(6, 4, 3, 0),
    gsSP1Triangle(7, 4, 5, 0),
    gsSP1Triangle(8, 9, 10, 0),
    gsSP2Triangles(6, 8, 10, 0, 6, 10, 5, 0),
    gsSP2Triangles(7, 11, 1, 0, 7, 1, 0, 0),
    gsSP2Triangles(3, 2, 8, 0, 3, 8, 6, 0),
    gsSP2Triangles(5, 10, 11, 0, 5, 11, 7, 0),
    gsSP1Triangle(11, 9, 1, 0),
    gsSP1Triangle(2, 9, 8, 0),
    gsSP1Triangle(10, 9, 11, 0),
    gsSP1Triangle(1, 9, 2, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_Sword[] = {
 
    /* Texture Change Hilt */
    gsDPSetPrimColor(0, 0, 231, 201, 85, 255),
    gsDPPipeSync(),
    gsSPVertex(vtx_Sword+13, 20, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(3, 2, 6, 0, 3, 6, 5, 0),
    gsSP2Triangles(0, 3, 5, 0, 0, 5, 4, 0),
    gsSP2Triangles(2, 1, 7, 0, 2, 7, 6, 0),
    gsSP2Triangles(1, 0, 4, 0, 1, 4, 7, 0),
    gsSP2Triangles(8, 9, 10, 0, 8, 10, 11, 0),
    gsSP2Triangles(12, 11, 13, 0, 12, 13, 14, 0),
    gsSP2Triangles(15, 16, 12, 0, 15, 12, 17, 0),
    gsSP2Triangles(16, 8, 11, 0, 16, 11, 12, 0),
    gsSP2Triangles(9, 15, 17, 0, 9, 17, 10, 0),
    gsSP2Triangles(13, 18, 19, 0, 13, 19, 14, 0),
    gsSP2Triangles(10, 17, 19, 0, 10, 19, 18, 0),
    gsSP2Triangles(11, 10, 18, 0, 11, 18, 13, 0),
    gsSP2Triangles(17, 12, 14, 0, 17, 14, 19, 0),
    
    /* Texture Change Boot */
    gsSPVertex(vtx_Sword, 13, 0),
    gsDPSetPrimColor(0, 0, 82, 70, 39, 255),
    gsDPPipeSync(),
    gsSP2Triangles(5, 6, 7, 0, 5, 7, 8, 0),
    gsSP2Triangles(9, 5, 8, 0, 9, 8, 10, 0),
    gsSP2Triangles(6, 11, 12, 0, 6, 12, 7, 0),
    gsSP2Triangles(11, 9, 10, 0, 11, 10, 12, 0),
    
    /* Texture Change Armor */
    gsSPClearGeometryMode(G_CULL_BACK),
    gsDPSetPrimColor(0, 0, 138, 138, 138, 255),
    gsDPPipeSync(),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(1, 4, 2, 0),
    gsSPSetGeometryMode(G_CULL_BACK),
    gsSPEndDisplayList(),
};

static Gfx gfx_Pad[] = {
    
    /* Texture Change Armor */
    gsSPVertex(vtx_Pad, 8, 0),
    gsSP1Triangle(0, 1, 2, 0),
    gsSP1Triangle(3, 1, 4, 0),
    gsSP1Triangle(2, 1, 5, 0),
    gsSP1Triangle(4, 1, 0, 0),
    gsSP1Triangle(5, 1, 3, 0),
    gsSP1Triangle(2, 6, 0, 0),
    gsSP1Triangle(4, 6, 3, 0),
    gsSP1Triangle(5, 7, 2, 0),
    gsSP1Triangle(0, 6, 4, 0),
    gsSP1Triangle(3, 6, 7, 0),
    gsSP1Triangle(7, 5, 3, 0),
    gsSP1Triangle(2, 7, 6, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_RightFemur[] = {
    
    /* Texture Change BootTex */
    gsSPVertex(vtx_RightFemur, 12, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(7, 6, 8, 0, 7, 8, 9, 0),
    gsSP2Triangles(9, 8, 10, 0, 9, 10, 11, 0),
    gsSP2Triangles(5, 10, 8, 0, 5, 8, 6, 0),
    gsSP2Triangles(11, 4, 7, 0, 11, 7, 9, 0),
    gsSPEndDisplayList(),
};

static Gfx gfx_LeftLeg[] = {
    
    /* Texture Change Pants */
    gsSPVertex(vtx_LeftLeg, 14, 0),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP1Triangle(4, 5, 6, 0),
    gsSP1Triangle(7, 8, 6, 0),
    gsSP1Triangle(5, 1, 6, 0),
    gsSP1Triangle(8, 4, 6, 0),
    gsSP1Triangle(0, 7, 6, 0),
    gsSP1Triangle(1, 0, 6, 0),
    gsSP1Triangle(3, 2, 9, 0),
    gsSP2Triangles(5, 4, 10, 0, 5, 10, 11, 0),
    gsSP2Triangles(8, 7, 12, 0, 8, 12, 13, 0),
    gsSP2Triangles(1, 5, 11, 0, 1, 11, 2, 0),
    gsSP2Triangles(4, 8, 13, 0, 4, 13, 10, 0),
    gsSP2Triangles(7, 0, 3, 0, 7, 3, 12, 0),
    gsSP1Triangle(11, 10, 9, 0),
    gsSP1Triangle(13, 12, 9, 0),
    gsSP1Triangle(2, 11, 9, 0),
    gsSP1Triangle(10, 13, 9, 0),
    gsSP1Triangle(12, 3, 9, 0),
    gsSPEndDisplayList(),
};


/*********************************
            Mesh Parts
*********************************/

MeshRoot roots[TOTALMESHES] = {
    {-12.17,3.58,73.39},
    {24.45,5.56,141.74},
    {0,3.58,100.62},
    {0,3.58,151.03},
    {-0.05,17.40,180.55},
    {15.36,3.58,13.19},
    {5.71,-17.15,187.28},
    {68.86,5.47,140.58},
    {14.95,1.70,43.01},
    {45.52,6.58,139.64},
    {0,3.58,77.25},
    {-45.40,7.82,139.97},
    {-68.72,5.47,140.58},
    {-14.26,3.58,13.19},
    {-24.31,5.56,141.74},
    {-18.03,23.67,152.78},
    {-11.17,3.58,151.48},
    {-13.89,1.67,43.01},
    {13.16,3.58,73.39},
};

Mesh mparts[TOTALMESHES] = {
    {gfx_RightLeg},
    {gfx_LeftArm},
    {gfx_Chest},
    {gfx_Head},
    {gfx_Ponytail},
    {gfx_LeftFoot},
    {gfx_Bang},
    {gfx_LeftHand},
    {gfx_LeftFemur},
    {gfx_LeftForearm},
    {gfx_Pelvis},
    {gfx_RightForearm},
    {gfx_RightHand},
    {gfx_RightFoot},
    {gfx_RightArm},
    {gfx_Sword},
    {gfx_Pad},
    {gfx_RightFemur},
    {gfx_LeftLeg},
};