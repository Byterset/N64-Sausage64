trigger:
  branches:
    include: ["master", "develop*", "release*", "refs/tags/*" ]
  paths:
    exclude: [ "doc", "*.md", ".gitignore" ]

jobs:
- job: Chorizo_Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      echo Download wxWidgets
      pip install gdown
      gdown --fuzzy https://drive.google.com/u/0/uc?id=1Dg5BZtatClyEX0zPYXjYKiNGHGMkbQ4G&export=download
      ren *.zip wxWidgets.zip
      7z x wxWidgets.zip -oD:/
      dir
      cd D:/
      dir
    
  # Visual Studio build
  # Build with MSBuild and set the Visual Studio version property
  - task: VSBuild@1
    env:
      WXWIN: D:/wxWidgets/
    inputs:
      configuration: 'release'
      solution: '**\*.sln' 
      vsVersion: '16.0' # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 11.0
      msbuildArchitecture: 'x86' # Optional. Options: x86, x64

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.SourcesDirectory)/Sample Previewer/Release/Chorizo.exe'
      #pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'chorizo-windows' 
      publishLocation: 'Container' # Options: container, filePath
      parallel: true # Optional

- job: Chorizo_Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo Add Linux dependencies
      sudo apt install build-essential
      sudo apt install libgtk-3-dev
      sudo apt install freeglut3-dev
      
      echo Download wxWidgets
      curl -L https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.5/wxWidgets-3.1.5.tar.bz2 --output wxwidgets.tar.bz2
      mkdir ~/wx
      mkdir ~/wx/wxwidgets
      tar xvf wxwidgets.tar.bz2 -C ~/wx/
      cd ~/wx/wxWidgets-3.1.5
      
      echo Building wxWidgets
      mkdir gtk-build
      cd gtk-build
      ../configure --with-opengl --disable-shared
      make -j 2
      sudo make install
      sudo ldconfig
      
      cd $BUILD_SOURCESDIRECTORY
      
      echo Build App
      cd "./Sample Previewer/"
      ls
      make 
    displayName: 'Build Program'
    continueOnError: false

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.SourcesDirectory)/Sample Previewer/Chorizo' 
      #pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'chorizo-linux' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional